{"version":3,"sources":["../../../common/utils/fs.js","../../../common/react/scope.js","../../../common/utils/equal-deep.js","routes/literacy/word-search/game/words/read-word.js","../../../common/react/fragments.js","../../../common/utils/collections.js","../../../common/utils/arr-path.js","../../../common/react/invoke.js","../../../common/utils/ranges.js","app/common/redirect.js","app/common/router-history.js","../../../common/react/bind-input-number.js","../../../common/react/ignore-update.js","../../../common/react/keys/global-mouse-up.js","routes/literacy/word-search/game/generate/generate-matrix.js","../../../common/react/load2.js","../../../common/react/keyed.js","../../../common/react/f-component.js","../../../common/react/load.js","../../../common/react/global-event.js","../../../common/react/on-unmounted.js","../../../common/react/static-2.js","../../../common/react/static.js","routes/literacy/word-search/game/generate/apply-words.js","routes/literacy/word-search/game/generate/gen-word-locations.js","routes/literacy/word-search/game/generate/conflict.js","routes/literacy/word-search/game/generate/gen-matrix-avoid-words.js","routes/literacy/word-search/game/words/find-word.js","routes/common/layout/layout.jsx","routes/math/match/match-common.jsx","routes/math/match/match-plus.jsx","routes/math/minus/math-minus.jsx","routes/math/match/match-minus.jsx","routes/math/plus-minus-110/math-plus-minus-110.jsx","routes/literacy/word-search/game/grid/grid.jsx","routes/literacy/word-search/game/game.jsx","routes/literacy/word-search/word-search-route.jsx","app/routes.jsx","routes/index/index-route.jsx","app/max-app.jsx","index.jsx","../../../common/react/use-state.js","../../../common/react/ls-state.js","../../../common/react/state-path-change.js","routes/math/common/gen-numbers.js","routes/math/common/generators/common/gen-int.js","routes/math/common/format-equation.js","../../../common/react/chain-services.js"],"names":["chain","value","fList","fn","exports","chain1","and","require","getPath","setPath","changePath","scope","state","path","onChange","v","cb","change","s1","reduce","equalDeep","o1","o2","k","undefined","equalDeep1","readWord","matrix","d","start","direction","length","s","i","x","y","h","createElement","Fragment","fragments","args","fragments2","elements","findMinE","col","getValue","quickStop","minVal","minEle","e","findMaxE","maxVal","maxEle","findMinECompare","compare","last","findLastIndex","find","findMinValue","gt","compares","le","v1","v2","lt","ge","findMaxValue","withoutAll","targets","filter","indexOf","remove1Mutate","targetElem","splice","unique","by","ret","keys","key","push","sort","byFn","clone","slice","e1","e2","createArray","isNaN","Array","fill","map","_","findMinIndex","minIndex","insertAt","addRemove","element","removeAll","without","unique1","uniqueDeep","findIndex","indexAttr","keyAttr","valueAttr","hasOwnProperty","index","getKey","indexAttrMulti","list","sort1","sortMulti","byFns","b1","b2","reverse","createArray1","createArray2","from","to","addListToSet","set","item","addToSetMutate","addToListMap","listMap","concatToListMap","items","merge","j","mergeListMap","lms","lm","replace","withs","replaceFind","newE","replaceIndex","replaceFind_f","getNewE","upsert","changeFind","changeIndex","flatten1","arr","concat","findValue","replaceBy","byF","replace1","target","with1","split","trues","falses","flatten11","removeIndex","replaceIndex2","newEs","sum","t","toMap","indexToKey","sum1","switchAmong","getArr","a","divide","weights","extracted","forEach","weight","di","end","Math","floor","swap","newKey","oldKey","get","oldValue","newValue","crossMap","cols","firstCol","lastCols","findDuplicateds","jsonUnique","JSON","stringify","parse","joinArr","delimiter","compareCol","newCol","oriCol","added","removed","oe","ne","shuffle","array","currentIndex","i1","i2","temporaryValue","randomIndex","random","isEmpty","isNotEmpty","setEqual","col1","col2","isAllNull","arrStartsWith","startsWith","arrEquals","a1","a2","flip","obj","attr1","object","lastAttrs","attr","type","createChild","isArray","Object","assign","setPathO","updatedValue","locate","cond","first","FComponent","Invoke","props","onMounted","next","Invoke1","context","getLatestProps","isMounted","mounted","onMount","setTimeout","this","calculateRange","inRange","range","createRangeGross","min","max","orRanges","ranges","r1","r2","conflict","toArr","sumRanges","rangeSingle","range0","toRange","rangeLength","r","conflict12","rs","ranges2","consumeRanges","rangesGross","tr","exclude","oriRanges","holes","oriRange","exclude12","hole","exclude11","c","sortRanges","equalRanges","insertSorted","rangeAdd","delta","fragmentRanges","fragmenteds","addFraRanges","addFraRange","rsToAdd","rFra","oris","rO","remains","rToAdd","common","rsFra","commonRange","sumRangeWeights","rws","rw","combineRangeWeights","rws1","rws2","getWeight","getMinRangeWeight","rangeWeights","getMaxRangeWeight","extendsRange","expandRange","amount","moveRange","Component","redirect","location","RedirectRoute","history","routerHistory","createHashHistory","bindInputNumber","IgnoreUpdate","when","onRender","unless","IgnoreUpdate1","nextProps","GlobalEvent","GlobalMouseUp","action","eventName","applyWords","genWordLocations","genMatrixAvoidWords","generateMatrix","size","width","height","wordList","wordLocations","lengths","w","word","keyed","cs","UseState","Load2","fetch","keepOutdatedValue","_key","loaded","loading","reload","React","updater","onUnmounts","onChangeds","onMounts","onUnmount","onChanged","l","prevProps","newState","f","removeListener","Load","load2","Load1","OnUnmounted","Static2","listener","listener1","window","addEventListener","l1","removeEventListener","OnUnmounted1","Static","getInitValue","initValue","Static1","row","locations","loc","genLoc","preLocs","rangeConflict","l2","crossConflict","findWord","String","fromCharCode","charCodeAt","horizontal","vertical","Layout","className","MatchCommon","LsState","defaultValue","config","generate","result","feeds","join","combis","nums","combi","randomFrom","genNumbers","genInt","prev","n","defaultConfig","firstMin","numCount","eqCount","n1","Grid","onMouseDown","onMouseEnter","onMouseLeave","getColor","markedLocations","cell","cx","style","top","left","Game","selecting","markeds","pos","spc","m","routes","name","component","eq","formatEquation","expanded","onClick","label","IndexRoute","MaxApp","exact","render","ReactDOM","document","getElementById","UseState1","unmounted","Date","now","callback","value1","setState","reduceValue","str","localStorage","getItem","removeItem","setItem","numberGenerators","num","numberGenerator","until","genInt1","numbers","deltas","toMath1","number","toDeltas","services","gather","cs1"],"mappings":"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","file":"static/js/main.12ae87f4.chunk.js","sourcesContent":["const chain = (value, ...fList) => {\n    for (const fn of fList) {\n        if (fn) {\n            value = fn(value);\n        }\n    }\n    return value;\n};\n\nexports.chain = chain;\nexports.chain1 = chain;\n\nconst and = (...fList) => {\n    return (...args) => {\n        for (const fn of fList) {\n            if (!fn(...args)) {\n                return false;\n            }\n        }\n        return true;\n    };\n};\n\nexports.and = and;","const {getPath, setPath, changePath} = require(\"../utils/arr-path\");\n\nconst scope = (state, path) => ({\n    value: getPath(state.value, path),\n    onChange: (v, cb) => {\n        if (state.change) {\n            state.change((s1) => setPath(s1, path, v), cb);\n        } else {\n            state.onChange(setPath(state.value, path, v), cb);\n        }\n    },\n    change: (reduce, cb) => {\n        if (state.change) {\n            state.change(\n                (v) => changePath(v, path, reduce),\n                cb,\n            );\n        } else {\n            state.onChange(changePath(state.value, path, reduce), cb);\n        }\n    },\n});\nexports.scope = scope;\n","\nfunction equalDeep(o1, o2) {\n    if (o1 === o2) {\n        return true;\n    }\n\n    if (o1 == null && o2 == null) {\n        return false;\n    }\n\n    if (o1 == null || o2 == null) {\n        return false;\n    }\n\n    if (typeof o1 === \"object\" && typeof o2 === \"object\") {\n        for (const k in o1) {\n            if (!equalDeep(o1[k], o2[k])) {\n                return false;\n            }\n        }\n        for (const k in o2) {\n            if (o1[k] === undefined && o2[k] !== undefined) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    return false;\n}\nexports.equalDeep = equalDeep;\nexports.equalDeep1 = equalDeep;\n","const readWord = ({matrix, d: {start, direction, length}}) => {\n    let s = \"\";\n    for (let i = 0; i < length; i++) {\n        const {x,y} = direction === \"horizontal\" ? {\n            x: start.x + i,\n            y: start.y,\n        } : {\n            x: start.x,\n            y: start.y + i,\n        };\n        if (x > matrix[0].length - 1) {\n            return null;\n        }\n        if (y > matrix.length - 1) {\n            return null;\n        }\n        s += matrix[y][x];\n    }\n    return s;\n};\nexports.readWord = readWord;\n","const {createElement: h, Fragment} = require(\"react\");\n\nconst fragments = (...args) => h(Fragment, {},\n    ...args,\n);\nexports.fragments = fragments;\n\nconst fragments2 = (elements) => h(Fragment, {},\n    ...elements,\n);\nexports.fragments2 = fragments2;\n","const {equalDeep1} = require(\"./equal-deep\");\nconst {chain} = require(\"./fs\");\n\nconst findMinE = (col, getValue, quickStop) => {\n    let minVal = undefined;\n    let minEle = undefined;\n\n    for (const e of col) {\n        const value = getValue(e);\n        if (value == null) {\n            continue;\n        }\n\n        if (quickStop !== undefined && quickStop===value) {\n            return e;\n        }\n        if (minVal === undefined || minVal > value) {\n            const v = value;\n            if (v != null) {\n                minVal = v;\n                minEle = e;\n            }\n        }\n    }\n    return minEle;\n};\n\nexports.findMinE = findMinE;\n\nconst findMaxE = (col, getValue = v=>v, quickStop) => {\n    let maxVal = undefined;\n    let maxEle = undefined;\n\n    for (const e of col) {\n        const value = getValue(e);\n        if (quickStop !== undefined && quickStop===value) {\n            return e;\n        }\n\n        if (maxVal === undefined || maxVal < value) {\n            const v = value;\n            if (v != null) {\n                maxVal = v;\n                maxEle = e;\n            }\n        }\n    }\n    return maxEle;\n};\nexports.findMaxE = findMaxE;\n\nconst findMinECompare = (col, compare) => {\n    let maxEle = undefined;\n\n    for (const e of col) {\n        if (maxEle === undefined || compare(maxEle, e) > 0) {\n            maxEle = e;\n        }\n    }\n    return maxEle;\n};\nexports.findMinECompare = findMinECompare;\n\nconst last = (col) => {\n    return col[col.length - 1];\n};\nexports.last = last;\n\nconst findLastIndex = (col, find) => {\n    for (let i = col.length - 1; i > -1; i--) {\n        if (find(col[i])) {\n            return i;\n        }\n    }\n    return -1;\n};\nexports.findLastIndex = findLastIndex;\n\nconst findMinValue = (col, getValue = v=>v, {gt = compares.gt}={}) => {\n    if (col==null) {\n        return null;\n    }\n\n    let minVal = undefined;\n\n    for (const e of col) {\n        if (e == null) {\n            continue;\n        }\n        const v = getValue(e);\n        if (minVal === undefined || gt(minVal, v)) {\n            if (v != null) {\n                minVal = v;\n            }\n        }\n    }\n    return minVal === undefined ? null : minVal;\n};\n\nexports.findMinValue = findMinValue;\n\nconst compares = {\n    le: (v1, v2) => v1 <= v2,\n    lt: (v1, v2) => v1 <  v2,\n    ge: (v1, v2) => v1 >= v2,\n    gt: (v1, v2) => v1 >  v2,\n};\n\nconst findMaxValue = (col, getValue = (v=>v), {lt = compares.lt}={}) => {\n    if (col==null) {\n        return null;\n    }\n    let maxVal = undefined;\n\n    for (const e of col) {\n        if (e == null) {\n            continue;\n        }\n        const value = getValue(e);\n        if (maxVal === undefined || lt(maxVal, value)) {\n            if (value != null) {\n                maxVal = value;\n            }\n        }\n    }\n    return maxVal === undefined ? null : maxVal;\n};\n\nexports.findMaxValue = findMaxValue;\n\nconst findMinIndex = (col, getValue) => {\n    let minVal = undefined;\n    let minIndex = undefined;\n\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n\n        if (minVal === undefined || minVal > getValue(e)) {\n            const v = getValue(e);\n            if (v != null) {\n                minVal = v;\n                minIndex = i;\n            }\n        }\n    }\n    return minIndex;\n};\nexports.findMinIndex = findMinIndex;\n\n\nfunction insertAt(col, e, i) {\n    return [\n        ...col.slice(0, i),\n        e,\n        ...col.slice(i),\n    ];\n}\nexports.insertAt = insertAt;\n\nfunction addRemove(col) {\n    return (element) => {\n        col.push(element);\n\n        return () => remove1Mutate(col, element);\n    }\n}\nexports.addRemove = addRemove;\n\nfunction withoutAll(col, targets) {\n    return col.filter((e) => !~targets.indexOf(e));\n}\nexports.withoutAll = withoutAll;\n\n// @deprecated\nexports.removeAll = withoutAll;\n\nfunction remove1Mutate(col, targetElem) {\n    if (col == null) {\n        return;\n    }\n\n    let i = col.indexOf(targetElem);\n    if (i === -1) {\n        return;\n    }\n    col.splice(i, 1);\n}\nexports.remove1Mutate = remove1Mutate;\n\nfunction without(targetElem, col) {\n    if (col == null) {\n        return;\n    }\n    return col.filter((e) => e!==targetElem);\n}\nexports.without = without;\n\nfunction unique(col, by = v=>v) {\n    if (!col) {\n        return col;\n    }\n    const ret = [];\n    const keys = [];\n    for (const e of col) {\n        const key = by(e);\n        if (!~keys.indexOf(key)) {\n            ret.push(e);\n            keys.push(key);\n        }\n    }\n    return ret;\n}\nexports.unique = unique;\nexports.unique1 = unique;\n\nfunction uniqueDeep(col, by = v=>v) {\n    if (!col) {\n        return col;\n    }\n    const ret = [];\n    const keys = [];\n    for (const e of col) {\n        const key = by(e);\n        if (!~keys.findIndex((k) => equalDeep1(k, key))) {\n            ret.push(e);\n            keys.push(key);\n        }\n    }\n    return ret;\n}\nexports.uniqueDeep = uniqueDeep;\n\nfunction indexAttr(col, keyAttr, valueAttr) {\n    if (col == null) {\n        return {};\n    }\n    let map = {};\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n        if (map.hasOwnProperty(e[keyAttr])) {\n            throw `Property existed [${e[keyAttr]}]`;\n        }\n        map[e[keyAttr]] = valueAttr ? e[valueAttr] : e;\n    }\n    return map;\n}\nexports.indexAttr = indexAttr;\n\nfunction index(col, getKey, getValue) {\n    if (col == null) {\n        return {};\n    }\n    let map = {};\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n        if (map.hasOwnProperty(getKey(e))) {\n            throw `Property existed [${getKey(e)}]`;\n        }\n        map[getKey(e)] = getValue ? getValue(e) : e;\n    }\n    return map;\n}\nexports.index = index;\n\nfunction indexAttrMulti(col, keyAttr, valueAttr) {\n    if (col == null) {\n        return {};\n    }\n    let map = {};\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n        let list = map[e[keyAttr]];\n        if (list == null) {\n            list = [];\n            map[e[keyAttr]] = list;\n        }\n        list.push(valueAttr ? e[valueAttr] : e);\n    }\n    return map;\n}\nexports.indexAttrMulti = indexAttrMulti;\n\nfunction sort(col, byFn = v=>v, compare = (v1,v2) => v1 > v2 ? 1 : -1) {\n    if (col == null) {\n        return null;\n    }\n    let clone = col.slice(0);\n    clone.sort((e1, e2) => {\n        const v1 = byFn(e1);\n        const v2 = byFn(e2);\n        if (v1 === v2) {\n            return 0;\n        }\n        if (v1 == null) {\n            return -1;\n        }\n        if (v2 == null) {\n            return 1;\n        }\n        return compare(v1, v2);\n    });\n    return clone;\n}\nexports.sort = sort;\nexports.sort1 = sort;\n\nfunction sortMulti(col, byFns) {\n    if (col == null) {\n        return null;\n    }\n    let clone = col.slice(0);\n    clone.sort((e1, e2) => {\n        for (const byFn of byFns) {\n            const b1 = byFn(e1);\n            const b2 = byFn(e2);\n            if (b1 > b2) {\n                return 1;\n            }\n            if (b1 < b2) {\n                return -1;\n            }\n        }\n        return 0;\n    });\n    return clone;\n}\nexports.sortMulti = sortMulti;\n\nfunction reverse(col) {\n    if (col == null) return null;\n\n    let clone = col.slice(0);\n    clone.reverse();\n    return clone;\n}\nexports.reverse = reverse;\n\nfunction createArray(length) {\n    if (isNaN(length)) {\n        throw \"[createArray] Length is not a number: \" + length;\n    }\n    return new Array(length).fill(0).map((_, i) => i);\n}\nexports.createArray = createArray;\nexports.createArray1 = createArray;\n\nfunction createArray2(from, to) {\n    let ret = [];\n    for (let i = from; i < to; i++) {\n        ret.push(i);\n    }\n    return ret;\n}\nexports.createArray2 = createArray2;\n\nfunction addListToSet(list, set) {\n    set = set.slice(0);\n    for (const item of list) {\n        if (!~set.indexOf(item)) {\n            set.push(item);\n        }\n    }\n    return set;\n}\nexports.addListToSet = addListToSet;\n\nfunction addToSetMutate(e, set) {\n    if (!~set.indexOf(e)) {\n        set.push(e);\n    }\n    return set;\n}\nexports.addToSetMutate = addToSetMutate;\n\nfunction addToListMap(listMap, key, item) {\n    let list = listMap[key];\n    if (list == null) {\n        list = [];\n        listMap[key] = list;\n    }\n    list.push(item);\n}\nexports.addToListMap = addToListMap;\n\nfunction concatToListMap(listMap, key, items) {\n    listMap[key] = [...listMap[key]||[], ...items];\n}\nexports.concatToListMap = concatToListMap;\n\nconst merge = (col, getKey, merge) => {\n    col = col.slice(0);\n\n    let ret = [];\n    for (let i = 0; i < col.length; i++) {\n        let e = col[i];\n        const key = getKey(e);\n\n        for (let j = i+1; j < col.length; j++) {\n            const e2 = col[j];\n            if (getKey(e2) === key) {\n                e = merge(e, e2);\n                col.splice(j, 1);\n                j--;\n            }\n        }\n        ret.push(e);\n    }\n    return ret;\n};\nexports.merge = merge;\n\nfunction mergeListMap(...lms) {\n    const ret = {};\n    for (const lm of lms) {\n        for (const key in lm) {\n            if (!ret.hasOwnProperty(key)) {\n                ret[key] = lm[key];\n            } else {\n                ret[key] = [...ret[key], ...lm[key]];\n            }\n        }\n    }\n    return ret;\n}\nexports.mergeListMap = mergeListMap;\n\nfunction replace(col, targets, withs) {\n    return col.map((e) => {\n        const indexOf = targets.indexOf(e);\n        if (indexOf > -1) {\n            return withs[indexOf];\n        } else {\n            return e;\n        }\n    });\n}\nexports.replace = replace;\n\nfunction replaceFind(col, newE, find) {\n    if (col == null) {\n        return null;\n    }\n    const index = col.findIndex(find);\n    if (index === -1) {\n        return col;\n    }\n    return replaceIndex(index, col, newE);\n}\nexports.replaceFind = replaceFind;\n\nfunction replaceFind_f(col, getNewE, find) {\n    if (col == null) {\n        return null;\n    }\n    const index = col.findIndex(find);\n    if (index === -1) {\n        return col;\n    }\n    return replaceIndex(index, col, getNewE(col[index]));\n}\nexports.replaceFind_f = replaceFind_f;\n\nconst upsert = (col, find, newE) => {\n    const index = col.findIndex(find);\n    if (index === -1) {\n        return [...col, newE];\n    } else {\n        return [...col.slice(0, index), newE, ...col.slice(index + 1)];\n    }\n};\nexports.upsert = upsert;\n\n\nfunction changeFind(col, find, by) {\n    if (col == null) {\n        return null;\n    }\n    const index = col.findIndex(find);\n    if (index === -1) {\n        return col;\n    }\n    return changeIndex(index, col, by);\n}\nexports.changeFind = changeFind;\n\nconst findValue = (col, getValue) => {\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n\n        const value = getValue(e, i);\n        if (value != null) {\n            return value;\n        }\n    }\n    return null;\n};\nexports.findValue = findValue;\n\n\nfunction replaceBy(col, find, byF) {\n    if (col == null) {\n        return null;\n    }\n    return col.map((e) => find(e) ? byF(e) : e);\n}\nexports.replaceBy = replaceBy;\n\nfunction replace1(col, target, with1) {\n    return col.map((e) => e === target ? with1 : e);\n}\nexports.replace1 = replace1;\n\nfunction split(col, by) {\n    if (col == null) {\n        return [];\n    }\n    let trues = [];\n    let falses = [];\n    for (const e of col) {\n        (by(e) ? trues : falses).push(e);\n    }\n    return [trues, falses];\n}\nexports.split = split;\n\nfunction flatten1(col) {\n    if (col == null) {\n        return [];\n    }\n    let ret = [];\n    for (const arr of col) {\n        if (arr) {\n            ret = ret.concat(arr);\n        }\n    }\n    return ret;\n}\nexports.flatten1 = flatten1;\nexports.flatten11 = flatten1;\n\nconst removeIndex = (index, col) => {\n    return col.filter((e, i) => i !== index);\n};\nexports.removeIndex = removeIndex;\n\nconst replaceIndex = (index, col, newE) => {\n    return col.map((e, i) => i !== index ? e : newE);\n};\nexports.replaceIndex = replaceIndex;\n\n// const replaceLast = (index, col, newE) => {\n//     return col.map((e, i) => i !== index ? e : newE);\n// };\n// exports.replaceLast = replaceLast;\n\nconst replaceIndex2 = (index, col, newEs) => {\n    return [\n        ...col.slice(0, index),\n        ...newEs,\n        ...col.slice(index+1),\n    ];\n};\nexports.replaceIndex2 = replaceIndex2;\n\nconst changeIndex = (index, col, by) => {\n    return col.map((e, i) => i !== index ? e : by(e));\n};\nexports.changeIndex = changeIndex;\n\nfunction toMap(arr, indexToKey) {\n    const ret = {};\n    for (let i = 0; i < arr.length; i++) {\n        ret[indexToKey(i)] = arr[i];\n    }\n    return ret;\n}\nexports.toMap = toMap;\n\nfunction sum(arr, getValue = v=>v) {\n    if (arr==null) {\n        return 0;\n    }\n    return arr.reduce((t, e, i) => t+(getValue(e, i)||0), 0);\n}\nexports.sum = sum;\nexports.sum1 = sum;\n\nconst switchAmong = (arr) => {\n    const getArr = typeof arr === \"function\" ? arr : () => arr;\n\n    let index = 0;\n\n    return () => {\n        index++;\n        const a = getArr();\n        if (index >= a.length) {\n            index = 0;\n        }\n        return a[index];\n    };\n};\n\nexports.switchAmong = switchAmong;\n\n\nconst divide = (col, weights) => {\n\n    let ret = [];\n    let extracted = 0;\n    weights.forEach((weight, di) => {\n        const end = di === weights.length - 1 ? col.length :\n            extracted + Math.floor(weight*col.length)\n        ;\n        ret.push(col.slice(extracted, end));\n        extracted = end;\n    });\n\n    return ret;\n};\nexports.divide = divide;\n\n\nconst swap = ({get, set}, newKey, oldKey) => {\n    const oldValue = get(oldKey);\n    const newValue = get(newKey);\n\n    set(oldValue, newKey);\n    set(newValue, oldKey);\n};\nexports.swap = swap;\n\n\nconst crossMap = (cols, fn) => {\n    if (cols == null || cols.length === 0) {\n        return [];\n    }\n    if (cols.length === 1) {\n        return cols[0].map((e) => fn([e]));\n    }\n    const [firstCol, ...lastCols] = cols;\n\n    let ret = [];\n    for (const e of firstCol) {\n        ret = [...ret, ...crossMap(lastCols, (path) => fn([e, ...path]))];\n    }\n    return ret;\n};\n\nexports.crossMap = crossMap;\n\nconst findDuplicateds = (col) => {\n    const ret = [];\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n        if (ret.indexOf(e) > -1) {\n            continue;\n        }\n        for (let j = i+1; j < col.length; j++) {\n            const e2 = col[j];\n            if (e2 === e) {\n                ret.push(e);\n                break;\n            }\n        }\n    }\n    return ret;\n};\nexports.findDuplicateds = findDuplicateds;\n\n\nconst jsonUnique = (col) => chain(\n    col.map((e) => JSON.stringify(e)),\n    unique,\n    (col) => col.map((s) => JSON.parse(s)),\n);\nexports.jsonUnique = jsonUnique;\n\nconst joinArr = (arr, delimiter) => {\n    if (arr== null || arr.length < 2) {\n        return arr;\n    }\n    let ret = [];\n    for (let i = 0; i < arr.length; i++) {\n        const e = arr[i];\n        if (i > 0) {\n            ret.push(delimiter);\n        }\n        ret.push(e);\n    }\n    return ret;\n};\nexports.joinArr = joinArr;\n\nconst compareCol = (newCol, oriCol, compare = (v1,v2) => v1===v2) => {\n    if (oriCol == null) {\n        oriCol = [];\n    }\n    if (newCol == null) {\n        newCol = [];\n    }\n\n    let added   = [];\n    let removed = [];\n    for (const oe of oriCol) {\n        if (newCol.find((ne) => compare(ne, oe)) == null) {\n            removed.push(oe);\n        }\n    }\n    for (const ne of newCol) {\n        if (oriCol.find((oe) => compare(ne, oe)) == null) {\n            added.push(ne);\n        }\n    }\n\n    return {added, removed};\n};\n\nexports.compareCol = compareCol;\n\n\nconst shuffle = array => {\n    array = array.slice(0);\n\n    let currentIndex = array.length;\n\n    const swap = (i1, i2) => {\n        const temporaryValue = array[i1];\n        array[i1] = array[i2];\n        array[i2] = temporaryValue;\n    };\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        const randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex --;\n\n        swap(currentIndex, randomIndex);\n    }\n\n    return array;\n};\nexports.shuffle = shuffle;\n\nconst isEmpty = (col) => {\n    return col == null || col.length === 0;\n};\nexports.isEmpty = isEmpty;\n\nconst isNotEmpty = (col) => {\n    return !isEmpty(col);\n};\nexports.isNotEmpty = isNotEmpty;\n\nconst setEqual = (col1, col2) => {\n    if (col1.length !== col2.length) {\n        return false;\n    }\n\n    for (const x of col1) {\n        if (col2.indexOf(x) === -1) {\n            return false;\n        }\n    }\n\n    return true;\n};\nexports.setEqual = setEqual;\n\nconst isAllNull = (col) => {\n    if (col === null) {\n        return null;\n    }\n\n    for (const v of col) {\n        if (v !== null) {\n            return false;\n        }\n    }\n\n    return true;\n};\nexports.isAllNull = isAllNull;\n\n\nconst arrStartsWith = (startsWith, arr) => {\n    if (arr == null) {\n        return startsWith == null;\n    }\n    if (startsWith == null) {\n        return true;\n    }\n    if (startsWith.length > arr.length) {\n        return true;\n    }\n\n    return arrEquals(arr.slice(0, startsWith.length), startsWith);\n};\nexports.arrStartsWith = arrStartsWith;\n\nconst arrEquals = (a1, a2) => {\n\n    if (a1 == null) {\n        return a2 == null;\n    }\n    if (a2 == null) {\n        return false;\n    }\n    if (a1.length !== a2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < a1.length; i++) {\n        if (a1[i] !== a2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n};\nexports.arrEquals = arrEquals;\n\nfunction flip(i1, i2, col) {\n    return col.map((e, i) => i === i1 ? col[i2] : i === i2 ? col[i1] : e);\n}\nexports.flip = flip;\n","\nfunction getPath(obj, path) {\n    if (path == null) {\n        return obj;\n    }\n    for (const attr1 of path) {\n        if (obj == null) {\n            return obj;\n        }\n        const [attr] = typeof attr1 === \"string\" ? (\n            attr1.indexOf(\"!\") > 0 ? attr1.split(\"!\") : [attr1]\n        ) : typeof attr1 === \"function\" ? (\n            [attr1(obj)]\n        ) : (\n            [attr1]\n        );\n        obj = obj[attr];\n    }\n    return obj;\n}\nexports.getPath = getPath;\n\nfunction setPath(object, path, value) {\n    if (path.length === 0) {\n        return value;\n    }\n\n    let [attr1, ...lastAttrs] = path;\n\n    const [attr, type] = typeof attr1 === \"string\" ? (\n        attr1.indexOf(\"!\") > 0 ? attr1.split(\"!\") : [attr1]\n    ) : typeof attr1 === \"function\" ? (\n        [attr1(object)]\n    ) : (\n        [attr1]\n    );\n\n    const createChild = () => type === \"arr\" ? [] : {};\n    if (Array.isArray(object)) {\n        let clone = object ? object.slice(0) : [];\n        clone[attr] = setPath(object && object[attr] || createChild(), lastAttrs, value);\n        return clone;\n    } else {\n        return Object.assign({}, object, {[attr]: setPath(object && object[attr] || createChild(), lastAttrs, value)});\n    }\n\n}\nexports.setPath = setPath;\n\nfunction setPathO(object, path, value) {\n    if (path.length === 0) {\n        return value;\n    }\n\n    let [attr, ...lastAttrs] = path;\n\n    return Object.assign({}, object, {[attr]: setPathO(object && object[attr] || {}, lastAttrs, value)});\n}\nexports.setPathO = setPathO;\n\nfunction changePath(object, path, fn) {\n    let oldValue = getPath(object, path);\n    let updatedValue = fn(oldValue);\n    return updatedValue !== oldValue ? setPath(object, path, updatedValue) : object;\n}\nexports.changePath = changePath;\n\n\nconst locate = (obj, path) => {\n    if (obj == null) {\n        return null;\n    }\n    const [first, ...last] = path;\n\n    const ret = ((cond) => {\n        if (typeof cond === \"object\") {\n            return obj.find((item) => !Object.keys(cond).find((k) => cond[k] !== item[k]));\n        } else {\n            return obj[cond];\n        }\n    })(first);\n\n    if (last.length) {\n        return locate(ret, last);\n    } else {\n        return ret;\n    }\n};\nexports.locate = locate;","const {FComponent} = require(\"./f-component\");\nconst {createElement: h} = require(\"react\");\n\nconst Invoke = ({fn, props, onMounted, next}) => h(Invoke1, {fn, props, onMounted, next});\nexports.Invoke = Invoke;\n\nclass Invoke1 extends FComponent {\n    constructor(props, context) {\n        super(props, context);\n\n        props.fn && props.fn({\n            getLatestProps: () => this.props.props,\n            isMounted: () => this.mounted,\n        });\n\n        if (props.onMounted) {\n            this.onMount(() => {\n                setTimeout(() => {\n                    this.props.onMounted({\n                        getLatestProps: () => this.props.props,\n                        isMounted: () => this.mounted,\n                    });\n                }, 0);\n            });\n        }\n    }\n\n    render() {\n        const {next} = this.props;\n        return next ? next() : null;\n    }\n}","const {chain} = require(\"./fs\");\nconst {findMinValue, findMaxValue} = require(\"./collections\");\n\nconst sum = require(\"./collections\").sum;\n\nconst {sort} = require(\"./collections\");\n\n\nconst calculateRange = (col) => {\n    if (col == null || col.length === 0) {\n        return null;\n    }\n    let ret = {from: col[0], to: col[0]};\n    for (let i = 1; i < col.length; i++) {\n        const e = col[i];\n        if (e < ret.from) {\n            ret.from = e;\n        } else if (e > ret.to) {\n            ret.to = e;\n        }\n    }\n    return ret;\n};\nexports.calculateRange = calculateRange;\n\nconst inRange = (value, range, {ge, lt} = compares) => {\n    if (range == null) {\n        return false;\n    }\n    return (range.from == null || ge(value, range.from)) && (range.to == null || lt(value, range.to));\n};\nexports.inRange = inRange;\n\nconst createRangeGross = (v1, v2) => {\n    return {\n        from: Math.min(v1, v2),\n        to: Math.max(v1, v2) + 1,\n    };\n};\nexports.createRangeGross = createRangeGross;\n\nconst orRanges = (ranges) => {\n    ranges = ranges.slice(0);\n    for (let i = 0; i < ranges.length; i++) {\n        for (let j = i+1; j < ranges.length; j++) {\n            const r1 = ranges[i];\n            const r2 = ranges[j];\n\n            if (conflict(r1, r2)) {\n                j--;\n                ranges[i] = createRangeGross(r1, r2);\n                ranges.splice(j,1);\n            }\n\n        }\n    }\n    return ranges;\n};\nexports.orRanges = orRanges;\n\n\nconst toArr = (range) => {\n    return new Array(range.to - range.from).fill(0).map((_, i) => i + range.from);\n};\nexports.toArr = toArr;\n\nconst sumRanges = (ranges) => {\n    let ret = {from: 0, to: 0};\n    for (const range of ranges) {\n        ret.from += range.from;\n        ret.to += range.to;\n    }\n    return ret;\n};\nexports.sumRanges = sumRanges;\n\nconst rangeSingle = (v) => ({from: v, to: v+1});\nexports.rangeSingle = rangeSingle;\n\nconst range0 = (v) => ({from: v, to: v});\nexports.range0 = range0;\n\nconst toRange = (v, length) => {\n    if (length > 0) {\n        return ({from: v, to: v + length});\n    } else {\n        return ({from: v, to: v});\n    }\n};\nexports.toRange = toRange;\n\nconst rangeLength = (r) => r == null ? 0 : r.to - r.from;\nexports.rangeLength = rangeLength;\n\nconst conflict12 = (r1, rs) => {\n    return rs.find((r2) => conflict(r1, r2));\n};\nexports.conflict12 = conflict12;\n\nconst conflict = (r1, r2, {ge} = compares) => {\n    r1[\"r1 is null\"];\n    r2[\"r2 is null\"];\n\n    if (r1.from != null && r2.to != null && ge(r1.from, r2.to)) {\n        return false;\n    }\n    if (r2.from != null && r1.to != null && ge(r2.from, r1.to)) {\n        return false;\n    }\n    return true;\n};\nexports.conflict = conflict;\n\n/**\n * Add all layers of ranges (2-dimention) to each other so we have a single layer of ranges\n * @param ranges2\n * @returns {Array}\n */\nconst merge = (...ranges2) => {\n\n    let ret = [];\n\n    for (;;) {\n        ranges2 = ranges2.filter((arr) => arr != null && arr.length > 0);\n\n        if (ranges2.length === 0) {\n            break;\n        }\n\n        ranges2 = sort(ranges2, (ranges) => ranges[0].from);\n\n        let range = ranges2[0][0];\n        ranges2[0] = ranges2[0].slice(1);\n\n        for (let i = 1; i < ranges2.length; i++) {\n            consumeRanges(ranges2[i], range);\n        }\n\n        ret.push(range);\n    }\n\n    return ret;\n};\nexports.merge = merge;\n\nconst rangesGross = (ranges) => {\n    return {\n        from: Math.min(...ranges.map((r) => r.from)),\n        to  : Math.max(...ranges.map((r) => r.to)),\n    }\n};\nexports.rangesGross = rangesGross;\n\n\nconst consumeRanges = (ranges, range) => {\n    for (;ranges.length > 0;) {\n        const tr = ranges[0];\n        if (tr.from <= range.to) {\n            range.to = Math.max(range.to, tr.to);\n            ranges.splice(0, 1);\n        } else {\n            break;\n        }\n    }\n};\n\nconst exclude22 = (oriRanges, holes, compares) => {\n    if (oriRanges == null) {\n        return null;\n    }\n\n    let ret = [];\n    for (const oriRange of oriRanges) {\n        ret = [...ret, ...exclude12(oriRange, holes, compares)];\n    }\n    return ret;\n};\nexports.exclude = exclude22;\n\nconst exclude12 = (oriRange, holes, compares) => {\n    let ret = [oriRange];\n\n    for (const hole of holes) {\n        for (let i = ret.length - 1; i > -1; i--) {\n            const oriRange = ret[i];\n\n            ret.splice(i, 1, ...exclude11(oriRange, hole, compares));\n        }\n    }\n    return ret;\n};\nexports.exclude12 = exclude12;\n\nconst compares = {\n    le: (v1, v2) => v1 <= v2,\n    lt: (v1, v2) => v1 <  v2,\n    ge: (v1, v2) => v1 >= v2,\n};\n\nconst exclude11 = (oriRange, hole, c) => {\n\n    if (!conflict(oriRange, hole, c)) {\n        return [oriRange];\n    }\n\n    // They have to conflict at some point...\n\n    const {le, ge, lt} = c || compares;\n    if (hole.to == null || (oriRange.to != null && le(oriRange.to, hole.to))) { // hole cover ori to\n        if (hole.from != null && (oriRange.from == null || lt(oriRange.from, hole.from))) { // hole does not cover ori from\n            // hole cuts later half of oriRange\n            return [{...oriRange, from: oriRange.from, to: hole.from}];\n        } else {\n            // Hole cover all ori -> Vanishes\n            return [];\n        }\n    } else {\n        // hole does not cover ori to\n        if (hole.from == null || (oriRange.from!= null && ge(oriRange.from, hole.from))) {\n            // Hole cuts first half of ori\n            return [{...oriRange, from: hole.to, to: oriRange.to}];\n        } else {\n            // ori range cover hole\n            return [\n                {...oriRange, from: oriRange.from, to: hole.from},\n                {...oriRange, from: hole.to, to: oriRange.to},\n            ];\n        }\n    }\n};\nexports.exclude11 = exclude11;\n\nconst sortRanges = (ranges) => sort(ranges, (r) => r.from);\nexports.sortRanges = sortRanges;\n\nconst equalRanges = (r1, r2) => {\n    if (r1 == null) {\n        return r2==null;\n    } else if (r2==null) {\n        return false;\n    }\n    return r1.from === r2.from && r1.to === r2.to;\n};\nexports.equalRanges = equalRanges;\n\n/**\n * Non conflicting\n */\nconst insertSorted = (ranges, range, {le} = compares) => {\n    if (range == null) return ranges;\n    if (ranges == null) {\n        return [range];\n    }\n    for (let i = 0; i < ranges.length; i++) {\n        const r1 = ranges[i];\n        if (range.from == null || (range.to != null && le(range.to, r1.from))) {\n            return [...ranges.slice(0, i), range, ...ranges.slice(i)];\n        }\n    }\n    return [...ranges, range];\n};\nexports.insertSorted = insertSorted;\n\nconst rangeAdd = (range, delta) => ({\n    from: range.from + delta,\n    to: range.to + delta,\n});\n\nexports.rangeAdd = rangeAdd;\n\n/**\n * 1-5 + 3-8 = 1-3,3-5,5-8\n * @param ranges\n */\nconst fragmentRanges = (ranges) => {\n    if (ranges == null) return null;\n\n    let fragmenteds = [];\n    for (const range of ranges) {\n        fragmenteds = addFraRanges([range], fragmenteds);\n    }\n\n    return sortRanges(fragmenteds);\n};\nexports.fragmentRanges = fragmentRanges;\n\nconst addFraRange = (rsToAdd, rFra) => {\n    let oris = [rFra];\n    for (let i = oris.length - 1; rsToAdd.length && i > -1; i--) {\n        const rO = oris[i];\n\n        let remains = [];\n        for (const rToAdd of rsToAdd) {\n            if (conflict(rO, rToAdd)) {\n                oris.splice(i, 1,\n                    ...exclude11(rO, rToAdd),\n                    common(rO, rToAdd),\n                );\n                remains = [...remains, ...exclude11(rToAdd, rO)];\n            } else {\n                remains.push(rToAdd);\n            }\n        }\n        rsToAdd = remains;\n    }\n    return {\n        oris,\n        remains: rsToAdd,\n    };\n};\nconst addFraRanges = (rsToAdd, fragmenteds) => {\n\n    let rsFra = fragmenteds.slice(0);\n\n    for (let i = rsFra.length - 1; i > -1; i--) {\n        const {oris, remains} = addFraRange(rsToAdd, rsFra[i]);\n\n        rsToAdd = remains;\n        rsFra.splice(i, 1, ...oris);\n    }\n\n    rsFra = [...rsFra, ...rsToAdd];\n    return rsFra;\n};\n\nconst common = (r1, r2) => !conflict(r1, r2) ? null : ({\n    from: Math.max(r1.from, r2.from),\n    to: Math.min(r1.to, r2.to),\n});\nexports.commonRange = common;\n\nconst sumRangeWeights = (rws) => rws && chain(\n    fragmentRanges(rws.map((rw) => rw.range)),\n    (ranges) => ranges.map((range) => ({\n        range,\n        weight: sum(rws.map((rw) => conflict(range, rw.range) ? rw.weight: 0)),\n    })),\n);\nexports.sumRangeWeights = sumRangeWeights;\n\nconst combineRangeWeights = (rws1, rws2, fn) => {\n    if (!rws1 || !rws2) {\n        return null;\n    }\n    return chain(\n        fragmentRanges([...rws1.map((rw) => rw.range), ...rws2.map((rw) => rw.range)]),\n        (ranges) => ranges.map((range) => ({\n            range,\n            weight: fn(\n                sum(rws1.map((rw) => conflict(range, rw.range) ? rw.weight : 0)),\n                sum(rws2.map((rw) => conflict(range, rw.range) ? rw.weight : 0)),\n            ),\n        })),\n    );\n};\nexports.combineRangeWeights = combineRangeWeights;\n\nconst getWeight = (x, rws) => {\n    const rw = rws.find((rw) => inRange(x, rw.range));\n    return rw && rw.weight;\n};\nexports.getWeight = getWeight;\n\nconst getMinRangeWeight = (range, rws) => chain(\n    sumRangeWeights(rws),\n    (rangeWeights) => findMinValue(rangeWeights.filter((rw) => range == null || conflict(range, rw.range)).map((rw) => rw.weight)) || 0,\n);\nexports.getMinRangeWeight = getMinRangeWeight;\n\n\nconst getMaxRangeWeight = (range, rws) => chain(\n    sumRangeWeights(rws),\n    (rangeWeights) => findMaxValue(rangeWeights.filter((rw) => range == null || conflict(range, rw.range)).map((rw) => rw.weight)) || 0,\n);\nexports.getMaxRangeWeight = getMaxRangeWeight;\n\nconst extendsRange = (range, length) => ({\n    from: range.from - length,\n    to  : range.to   + length,\n});\nexports.extendsRange = extendsRange;\n\nconst expandRange = (range, amount) => {\n    return {\n        from: range.from - amount,\n        to: range.to + amount,\n    };\n};\nexports.expandRange = expandRange;\n\nconst moveRange = (range, delta) => {\n    return {\n        from: range.from != null ? range.from + delta : null,\n        to  : range.to   != null ? range.to   + delta : null,\n    };\n};\nexports.moveRange = moveRange;\n","const {createElement: h, Component} = require(\"react\");\n\nfunction redirect(location) {\n    class RedirectRoute extends Component {\n        constructor(props, context) {\n            super(props, context);\n\n            props.history.push(location);\n        }\n        render() {\n            return null;\n        }\n    }\n\n    return (props) => h(RedirectRoute, props);\n}\nexports.redirect = redirect;\n","const {createHashHistory} = require(\"history\");\n\nconst routerHistory = createHashHistory();\nexports.routerHistory = routerHistory;\n","const bindInputNumber = ({value, onChange}) => ({\n    value: value || \"\",\n    onChange: (e) => onChange(!isNaN(e.target.value) ? +e.target.value : null),\n});\nexports.bindInputNumber = bindInputNumber;\n","const {Component, createElement: h} = require(\"react\");\n\nconst IgnoreUpdate = ({next, props, when, onRender, unless}) => h(IgnoreUpdate1, {next, props, when, onRender, unless});\nexports.IgnoreUpdate = IgnoreUpdate;\n\nclass IgnoreUpdate1 extends Component {\n\n    shouldComponentUpdate(nextProps) {\n        return (nextProps.when != null && !nextProps.when(this.props.props)) || (nextProps.unless != null && !!nextProps.unless(this.props.props));\n    }\n\n    render() {\n        const {next, onRender} = this.props;\n        onRender?.();\n        return next?.() ?? null;\n    }\n}\n","const {GlobalEvent} = require(\"../global-event\");\n\nconst GlobalMouseUp = ({action}) => GlobalEvent({\n    eventName: \"mouseup\",\n    fn: action,\n});\nexports.GlobalMouseUp = GlobalMouseUp;\n","const {applyWords} = require(\"./apply-words\");\nconst {chain} = require(\"../../../../../../../../common/utils/fs\");\nconst {genWordLocations} = require(\"./gen-word-locations\");\nconst {genMatrixAvoidWords} = require(\"./gen-matrix-avoid-words\");\n\nconst generateMatrix = ({size: {width, height}, wordList}) => {\n    const wordLocations = genWordLocations({width, height, lengths: wordList.map((w) => w.length)})\n    if (!wordLocations) {\n        return null;\n    }\n\n    return chain(\n        genMatrixAvoidWords({width, height, wordList}),\n        (_) => applyWords(_, wordList.map((word, i) => ({word, location: wordLocations[i]})))\n    );\n\n};\nexports.generateMatrix = generateMatrix;\n\n\n","const {fragments} = require(\"./fragments\");\nconst {keyed} = require(\"./keyed\");\nconst {scope} = require(\"./scope\");\nconst {cs} = require(\"./chain-services\");\nconst {UseState} = require(\"./use-state\");\nconst {Invoke} = require(\"./invoke\");\n\nconst Load2 = ({fetch, next, keepOutdatedValue, props, _key}) => cs(\n    [\"loaded\", (_, next) => UseState({next})],\n    ({loaded}) => {\n        const loading = loaded.value == null || loaded.value.key !== _key;\n\n        return fragments(\n            loading && cs(\n                keyed(_key),\n                () => (\n                    Invoke({\n                        props,\n                        fn: async ({isMounted, getLatestProps}) => {\n                            const value = await fetch({getLatestProps});\n                            if (!isMounted()) {\n                                return;\n                            }\n                            loaded.onChange({value, key: _key});\n                        },\n                    })\n                )\n            ),\n\n            next && next({\n                loading,\n                ...scope(loaded, [\"value\"]),\n                value: !loaded.value || _key !== loaded.value.key && !keepOutdatedValue ? undefined : loaded.value.value,\n                // value: loading && !keepOutdatedValue ? undefined : loaded.value.value,\n                reload: async () => {\n                    const value = await fetch();\n                    loaded.onChange({value, key: _key});\n                },\n            }),\n        );\n    },\n);\nexports.Load2 = Load2;\n","const {createElement: h, Fragment} = require(\"react\");\n\nconst keyed = (key) => (_, next) => (\n    h(Fragment, {key},\n        next()\n    )\n);\nexports.keyed = keyed;","const React = require(\"react\");\nconst {addRemove} = require(\"../utils/collections\");\n\nclass FComponent extends React.Component {\n\n    constructor(props, context, updater) {\n        super(props, context, updater);\n\n        this.onUnmounts = [];\n        this.onChangeds = [];\n        this.onMounts = [];\n        this.mounted = false;\n\n        this.onMount = addRemove(this.onMounts);\n        this.onUnmount = addRemove(this.onUnmounts);\n        this.onChanged = addRemove(this.onChangeds);\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.onMounts.forEach((l)=> l());\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        this.onUnmounts.forEach((l)=> l());\n    }\n\n    componentDidUpdate(prevProps) {\n        this.onChangeds.forEach((l)=> l(prevProps));\n    }\n\n    setState(newState, cb) {\n        if (this.mounted) {\n            super.setState(newState, cb);\n        } else {\n            this.state = Object.assign(this.state, newState);\n            cb && cb();\n        }\n    }\n\n    forceUpdate() {\n        if (this.mounted) {\n            super.forceUpdate();\n        }\n    }\n\n    onChanged1(f) {\n        const done = f();\n        if (done) {\n            return;\n        }\n\n        const removeListener = this.onChanged(() => {\n            const done = f();\n            if (done) {\n                removeListener();\n            }\n        });\n    };\n}\nexports.FComponent = FComponent;\n","const {Load2} = require(\"./load2\");\nconst {cs} = require(\"./chain-services\");\n\nconst Load = ({fetch, next, props, _key}) => cs(\n    [\"load2\", ({}, next) => Load2({\n        fetch, next, _key, props,\n    })],\n    ({load2}) => next && next(load2.value),\n);\nexports.Load = Load;\nexports.Load1 = Load;\n","const {cs} = require(\"./chain-services\");\nconst {OnUnmounted} = require(\"./on-unmounted\");\nconst {Static2} = require(\"./static-2\");\nconst {fragments} = require(\"./fragments\");\nconst {Invoke} = require(\"./invoke\");\n\nconst GlobalEvent = ({eventName, fn, next=undefined}) => cs(\n    [\"listener\", (_, next) => Static2({next})],\n    ({listener}) => fragments(\n        Invoke({\n            props: {fn},\n            fn: ({getLatestProps}) => {\n                const listener1 = (e) => {\n                    const {fn} = getLatestProps();\n                    fn(e);\n                };\n                window.addEventListener(eventName, listener1);\n                listener.set(listener1);\n            },\n        }),\n        OnUnmounted({\n            action: () => {\n                const l1 = listener.get();\n                if (l1) {\n                    window.removeEventListener(eventName, l1);\n                }\n            },\n        }),\n        next?.(),\n    ),\n);\nexports.GlobalEvent = GlobalEvent;\n","const React = require(\"react\");\nconst {createElement: h} = require(\"react\");\n\nconst OnUnmounted = ({action, props, next}) => h(OnUnmounted1, {action, props, next});\nexports.OnUnmounted = OnUnmounted;\n\nclass OnUnmounted1 extends React.Component {\n    componentWillUnmount() {\n        this.props.action({\n            getLatestProps: () => this.props.props,\n        });\n    }\n\n    render() {\n        const {next} = this.props;\n        return next ? next() : null;\n    }\n}","const {Static} = require(\"./static\");\nconst {createElement: h} = require(\"react\");\n\nconst Static2 = ({next}) => h(Static, {\n    getInitValue: () => {\n        let value;\n        return ({\n            get: () => value,\n            set: (v) => value = v,\n        });\n    },\n    next,\n});\nexports.Static2 = Static2;\n","const {createElement: h, Component} = require(\"react\");\n\nconst Static = ({getInitValue, initValue, props, next}) => h(Static1, {getInitValue, initValue, props, next});\nexports.Static = Static;\n\nclass Static1 extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.value = props.getInitValue ? props.getInitValue({\n            getLatestProps: () => this.props.props,\n        }) : props.initValue !== undefined ? props.initValue : props.value;\n    }\n    render() {\n        const {next} = this.props;\n\n        return next(this.value);\n    }\n}\n","\nconst applyWords = (matrix, wordLocations) => {\n    matrix = matrix.map((row) => row.slice(0));\n\n    for (const {word, location: {start, direction, length}} of wordLocations) {\n        for (let i = 0; i < length; i++) {\n            const {x, y} = direction === \"horizontal\" ? {\n                x: start.x + i,\n                y: start.y,\n            } : {\n                x: start.x,\n                y: start.y + i,\n            };\n            matrix[y][x] = word[i];\n        }\n    }\n    return matrix;\n};\nexports.applyWords = applyWords;\n","const {conflict} = require(\"./conflict\");\n\nconst genWordLocations = ({width, height, lengths}) => {\n    let locations = [];\n\n    for (let i = 0; i < lengths.length; i++) {\n        const length = lengths[i];\n\n        const loc = genLoc({width, height, length, preLocs: locations});\n        if (!loc) {\n            return null;\n        }\n        locations.push(loc);\n    }\n\n    return locations;\n};\nexports.genWordLocations = genWordLocations;\n\nconst genLoc = ({preLocs, width, height, length}) => {\n    for (let i = 0; i < 100; i++) {\n        const loc = (() => {\n            const direction = Math.random() < .5 ? \"horizontal\" : \"vertical\";\n            return {\n                start: direction === \"horizontal\" ? {\n                    x: Math.floor(Math.random() * (width - length)),\n                    y: Math.floor(Math.random() * (height)),\n                } : {\n                    x: Math.floor(Math.random() * (width)),\n                    y: Math.floor(Math.random() * (height - length)),\n                },\n                direction,\n                length,\n            };\n        })();\n\n        if (!preLocs.find((l1) => conflict(l1, loc))) {\n            return loc;\n        }\n    }\n};\n","const {inRange} = require(\"../../../../../../../../common/utils/ranges\");\nconst {toRange, conflict: rangeConflict} = require(\"../../../../../../../../common/utils/ranges\");\n\nconst conflict = (l1, l2) => {\n    if (l1.direction === l2.direction) {\n        if (l1.direction === \"horizontal\") {\n            if (l1.start.y !== l2.start.y) {\n                return false;\n            } else {\n                return rangeConflict(\n                    toRange(l1.start.x, l1.length),\n                    toRange(l2.start.x, l2.length),\n                );\n            }\n        } else {\n            if (l1.start.x !== l2.start.x) {\n                return false;\n            } else {\n                return rangeConflict(\n                    toRange(l1.start.y, l1.length),\n                    toRange(l2.start.y, l2.length),\n                );\n            }\n        }\n    } else {\n        if (l1.direction === \"horizontal\") {\n            return crossConflict({\n                h: l1,\n                v: l2,\n            });\n        } else {\n            return crossConflict({\n                h: l2,\n                v: l1,\n            });\n        }\n    }\n};\nexports.conflict = conflict;\n\nconst crossConflict = ({h, v}) => {\n    if (!inRange(v.start.x, toRange(h.start.x, h.length))) {\n        return false;\n    }\n    if (!inRange(h.start.y, toRange(v.start.y, v.length))) {\n        return false;\n    }\n    return true;\n}\n","const {createArray} = require(\"../../../../../../../../common/utils/collections\");\nconst {findWord} = require(\"../words/find-word\");\n\nconst genMatrixAvoidWords = ({width, height, wordList}) => {\n    const gen1 = () => createArray(height).map(() => (\n        createArray(width).map(() => (\n            String.fromCharCode(\"a\".charCodeAt(0) + Math.floor(Math.random() * 26))\n        ))\n    ));\n\n    for (;;) {\n        const matrix = gen1();\n        if (wordList.find((word) => findWord(word, matrix))) {\n            continue;\n        }\n        return matrix;\n    }\n};\nexports.genMatrixAvoidWords = genMatrixAvoidWords;\n\n","const {readWord} = require(\"./read-word\");\nconst findWord = (word, matrix) => {\n    for (let y = 0; y < matrix.length; y++) {\n        for (let x = 0; x < matrix[0].length; x++) {\n            let d = horizontal(word.length, {x, y});\n            if (word === readWord({d, matrix})) {\n                return d;\n            }\n            d = vertical(word.length, {x, y});\n            if (word === readWord({d, matrix})) {\n                return d;\n            }\n        }\n    }\n};\nexports.findWord = findWord;\n\nconst horizontal = (length, start) => ({\n    start,\n    direction: \"horizontal\",\n    length,\n});\nconst vertical = (length, start) => ({\n    start,\n    direction: \"vertical\",\n    length,\n});","import {cs} from \"../../../../../../common/react/chain-services\";\nimport * as React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport const Layout = ({next}) => cs(\n    ({}) => (\n        <div className=\"layout\">\n            <div className=\"\">\n                <Link to={\"/index\"}><i className=\"fa fa-arrow-left\"/> Back</Link>\n            </div>\n\n            <div className=\"\">\n                {next()}\n            </div>\n        </div>\n    )\n);\n","import {Load} from \"../../../../../../common/react/load\";\nimport {unique, sort, uniqueDeep} from \"../../../../../../common/utils/collections\";\nimport {cs} from \"../../../../../../common/react/chain-services\";\nimport * as React from \"react\";\nimport {LsState} from \"../../../../../../common/react/ls-state\";\nimport \"../common/main.scss\";\nimport {Layout} from \"../../common/layout/layout\";\n\nexport const MatchCommon = ({type}) => cs(\n    ({}, next) => Layout({next}),\n    [\"config\", (_, next) => LsState({\n        key: `math-match-${type}.config`,\n        defaultValue: {\n            max: 50,\n        },\n        next,\n    })],\n\n    [\"result\", ({config}, next) => Load({\n        _key: JSON.stringify(config.value),\n        fetch: () => generate(config.value),\n        next,\n    })],\n    ({result}) => result && (\n        <div className=\"math-main-1\">\n            <div className=\"\">\n                Biểu diễn các số dưới đây dưới dạng {type === \"plus\" ? \"tổng\" : \"hiệu\"} của 2 số cho trước\n            </div>\n            <div className=\"\">\n                {result.feeds.join(\", \")}\n            </div>\n            <div className=\"\">\n                {result.combis.map(({i1, i2}, i) => (\n                    <div key={i}>\n                        {type === \"plus\" ? (\n                            `${result.feeds[i1] + result.feeds[i2]} = ${result.feeds[i1]} + ${result.feeds[i2]}`\n                        ) : (\n                            `${result.feeds[i2] - result.feeds[i1]} = ${result.feeds[i2]} - ${result.feeds[i1]}`\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n);\n\nconst generate = ({max}) => {\n    const feeds = (() => {\n        let nums = [];\n        for (;nums.length < 10;) {\n            nums.push(Math.floor(Math.random() * 30) + 1);\n            nums = unique(nums);\n        }\n        return sort(nums);\n    })();\n\n    const combis = (() => {\n        let combis = [];\n\n        for (;combis.length < 10;) {\n            const combi = (() => {\n                const i1 = randomFrom(0, feeds.length - 1);\n                const i2 = randomFrom(i1 + 1, feeds.length);\n                return {i1, i2};\n            })();\n            if (feeds[combi.i1] + feeds[combi.i2] <= max) {\n                combis.push(combi);\n                combis = uniqueDeep(combis);\n            }\n        }\n        return sort(combis, ({i1, i2}) => i1 + i2);\n    })();\n\n    // console.log(feeds)\n    return {feeds, combis};\n};\n\nconst randomFrom = (from, to) => {\n    return Math.floor(Math.random() * (to - from)) + from;\n};","import * as React from \"react\";\nimport \"../common/main.scss\";\nimport {MatchCommon} from \"./match-common\";\n\nexport const MatchPlus = ({}) => MatchCommon({type: \"plus\"});\n","import {Load} from \"../../../../../../common/react/load\";\nimport {createArray} from \"../../../../../../common/utils/collections\";\nimport {cs} from \"../../../../../../common/react/chain-services\";\nimport * as React from \"react\";\nimport {LsState} from \"../../../../../../common/react/ls-state\";\nimport \"../common/main.scss\";\nimport {Layout} from \"../../common/layout/layout\";\nimport {genNumbers} from \"../common/gen-numbers\";\nimport {genInt} from \"../common/generators/common/gen-int\";\nimport {formatEquation} from \"../common/format-equation\";\n\nexport const MathMinus = ({}) => cs(\n    ({}, next) => Layout({next}),\n    [\"config\", (_, next) => LsState({\n        key: \"math-minus.config\",\n        defaultValue: {\n            max: 20,\n        },\n        next,\n    })],\n\n    [\"result\", ({config}, next) => Load({\n        _key: JSON.stringify(config.value),\n        fetch: () => generate(config.value),\n        next,\n    })],\n    ({result}) => result && (\n        <div className=\"math-main-1\">\n            <div className=\"\">\n                Trừ dưới 20\n            </div>\n            <div className=\"\">\n                {result.map((eq, i) => (\n                    <div key={i}>\n                        {formatEquation(eq)}\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n);\n\nconst generate = ({max}) => {\n    return createArray(20).map(() => genNumbers([\n        () => genInt(2, max),\n        (prev) => genInt(1, max, (n) => n < prev[0])\n    ]));\n};\n","import * as React from \"react\";\nimport \"../common/main.scss\";\nimport {MatchCommon} from \"./match-common\";\n\nexport const MatchMinus = ({}) => MatchCommon({type: \"minus\"});\n","import {Load} from \"../../../../../../common/react/load\";\nimport {createArray} from \"../../../../../../common/utils/collections\";\nimport {cs} from \"../../../../../../common/react/chain-services\";\nimport * as React from \"react\";\nimport {LsState} from \"../../../../../../common/react/ls-state\";\nimport \"../common/main.scss\";\nimport {Layout} from \"../../common/layout/layout\";\nimport {genNumbers} from \"../common/gen-numbers\";\nimport {genInt} from \"../common/generators/common/gen-int\";\nimport {formatEquation} from \"../common/format-equation\";\nimport {bindInputNumber} from \"../../../../../../common/react/bind-input-number\";\nimport {scope} from \"../../../../../../common/react/scope\";\nimport {IgnoreUpdate} from \"../../../../../../common/react/ignore-update\";\nimport {UseState} from \"../../../../../../common/react/use-state\";\n\nconst defaultConfig = {\n    firstMin: 50,\n    max: 110,\n    numCount: 3,\n    eqCount: 10,\n};\n\nexport const MathPlusMinus110 = ({}) => cs(\n    ({}, next) => Layout({next}),\n    [\"config\", (_, next) => LsState({\n        key: \"math-plus-minus-110.config\",\n        defaultValue: defaultConfig,\n        next: ({value, ...props}) => next({\n            value: {...defaultConfig, ...value},\n            ...props,\n        }),\n    })],\n\n    [\"state\", (_, next) => UseState({next})],\n\n    [\"result\", ({config, state}, next) => Load({\n        _key: JSON.stringify([config.value, state.value]),\n        fetch: () => generate(config.value),\n        next,\n    })],\n    ({result}, next) => IgnoreUpdate({\n        when: () => !result,\n        next\n    }),\n    ({result, config, state}) => result && (\n        <div className=\"math-main-1\">\n            <div className=\"\">\n                Cộng trừ dưới {config.value.max}\n            </div>\n            <div className=\"\">\n                {result.map((eq, i) => (\n                    <div key={i}>\n                        {i+1}. {formatEquation(eq)} = ?\n                    </div>\n                ))}\n            </div>\n\n            {cs(\n                [\"expanded\", (_, next) => UseState({next})],\n                ({expanded}) => (\n                    <div className=\"config\">\n                        <div className=\"\">\n                            <a onClick={() => state.change(v=>(v??0)+1)}>More</a>\n                        </div>\n                        <div className=\"\">\n                            <a onClick={() => expanded.change(v=>!v)}>Config</a>\n                        </div>\n\n                        {expanded.value && [\n                            {\n                                label: \"First min\",\n                                path: [\"firstMin\"],\n                            },\n                            {\n                                label: \"Max\",\n                                path: [\"max\"],\n                            },\n                            {\n                                label: \"Num Count\",\n                                path: [\"numCount\"],\n                            },\n                            {\n                                label: \"Equation Count\",\n                                path: [\"eqCount\"],\n                            },\n                        ].map(({label, path}, i) => (\n                            <div className=\"\" key={i}>\n                                {label}:\n                                <input {...{\n                                    ...bindInputNumber(scope(config, path))\n                                }} />\n                            </div>\n                        ))}\n                    </div>\n                )\n            )}\n        </div>\n    )\n);\n\nconst generate = ({firstMin, max, numCount, eqCount}) => {\n    return createArray(eqCount).map(() => genNumbers(\n        createArray(numCount).map(() =>\n            (prev) => genInt(prev.length === 0 ? firstMin : 0, max, (n) => prev.findIndex((n1) => n1 === n) === -1),\n        )\n    ));\n};\n","import {cs} from \"../../../../../../../../common/react/chain-services\";\nimport * as React from \"react\";\nimport \"./grid.scss\";\nimport {cx} from \"emotion\";\n\nexport const Grid = ({matrix, onMouseDown, onMouseEnter, onMouseLeave, getColor, markedLocations}) => cs(\n    () => (\n        <div className=\"grid-3ow\">\n            <table >\n                <tbody>\n                {matrix.map((row, y) => (\n                    <tr className=\"\" key={y}>\n                        {row.map((cell, x) => (\n                            <td {...{\n                                key: x,\n\n                                onMouseDown : () => onMouseDown?.({x,y}),\n                                onMouseEnter: () => onMouseEnter?.({x,y}),\n                                onMouseLeave: () => onMouseLeave?.({x,y}),\n\n                                className: cx(getColor({x,y})),\n                            }}>\n                                {cell}\n                            </td>\n                        ))}\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n\n            <div className=\"markedLocations\">\n                {markedLocations?.map((location, i) => (\n                    <div {...{\n                        key: i,\n                        className: cx(\"location\", location.direction),\n\n                        ...location.direction === \"horizontal\" ? {\n                            style: {\n                                top: location.start.y * 40 + 5,\n                                left: location.start.x * 40 + 5,\n                                width: location.length * 40 - 5*2,\n                            },\n                        }: {},\n                    }}/>\n                ))}\n            </div>\n        </div>\n    )\n);\n","import \"./game.scss\";\nimport * as React from \"react\";\nimport {cs} from \"../../../../../../../common/react/chain-services\";\nimport {Load} from \"../../../../../../../common/react/load\";\nimport {Grid} from \"./grid/grid\";\nimport {UseState} from \"../../../../../../../common/react/use-state\";\nimport {equalDeep} from \"../../../../../../../common/utils/equal-deep\";\nimport {GlobalMouseUp} from \"../../../../../../../common/react/keys/global-mouse-up\";\nimport {generateMatrix} from \"./generate/generate-matrix\";\nimport {readWord} from \"./words/read-word\";\nimport {spc} from \"../../../../../../../common/react/state-path-change\";\n\nexport const Game = ({size, wordList}) => cs(\n    [\"matrix\", ({}, next) => Load({\n        fetch: () => generateMatrix({size, wordList}),\n        next,\n    })],\n    [\"state\", (_, next) => UseState({\n        initValue: {selecting: null, markeds: []},\n        next,\n    })],\n    ({matrix, state}) => matrix && (\n        <div className=\"game-1i1\">\n            <div className=\"box\">\n                {Grid({\n                    matrix,\n\n                    markedLocations: state.value.markeds.map((r) => r.location),\n\n                    ...!state.value?.selecting ? {\n                        onMouseDown: (pos) => {\n                            spc(state, [\"selecting\"], () => ({start: pos}))\n                        },\n                    } : {\n                        onMouseEnter: (pos) => {\n                            const {start} = state.value.selecting;\n                            if (pos.x === start.x && pos.y > start.y) {\n                                spc(state, [\"selecting\"], (s) => ({\n                                    ...s,\n                                    direction: \"vertical\",\n                                    length: pos.y - start.y + 1,\n                                }));\n                            } else if (pos.y === start.y && pos.x > start.x) {\n                                spc(state, [\"selecting\"], (s) => ({\n                                    ...s,\n                                    direction: \"horizontal\",\n                                    length: pos.x - start.x + 1,\n                                }));\n                            } else {\n                                spc(state, [\"selecting\"], (s) => ({start: s.start}));\n                            }\n                        },\n                        onMouseLeave: () => {\n                            spc(state, [\"selecting\"], (s) => ({start: s.start}));\n                        },\n                    },\n\n                    getColor: (pos) => {\n                        if (state.value?.selecting) {\n                            const {start, direction, length} = state.value.selecting;\n                            if (equalDeep(pos, start)) {\n                                return \"green\";\n                            }\n\n                            if (direction === \"horizontal\" && pos.y === start.y && pos.x > start.x && pos.x - start.x < length) {\n                                return \"green\";\n                            }\n                            if (direction === \"vertical\" && pos.x === start.x && pos.y > start.y && pos.y - start.y < length) {\n                                return \"green\";\n                            }\n                        }\n                    },\n                })}\n            </div>\n\n            <pre>{JSON.stringify(state.value, null, 4)}</pre>\n\n            {state.value?.selecting && <>\n                {GlobalMouseUp({\n                    action: () => {\n                        const word = readWord({matrix, d: state.value.selecting});\n\n                        state.onChange({\n                            selecting: null,\n                            markeds: word && wordList.indexOf(word) > -1 && !state.value.markeds.find((m) => m.word === word) ? (\n                                [\n                                    ...state.value.markeds,\n                                    {word, location: state.value.selecting},\n                                ]\n                            ) : (\n                                state.value.markeds\n                            ),\n                        });\n                    }\n                })}\n            </>}\n        </div>\n    )\n);\n","import {cs} from \"../../../../../../common/react/chain-services\";\nimport * as React from \"react\";\nimport {Game} from \"./game/game\";\n\nexport const WordSearchRoute = ({}) => cs(\n    () => (\n        <div className=\"\">\n            {Game({\n                size: {width: 4, height: 4},\n                wordList: [\n                    \"love\",\n                    \"kiss\",\n                ],\n            })}\n        </div>\n    )\n);\n\n","import {MatchPlus} from \"../routes/math/match/match-plus\";\nimport {MathMinus} from \"../routes/math/minus/math-minus\";\nimport {MatchMinus} from \"../routes/math/match/match-minus\";\nimport {MathPlusMinus110} from \"../routes/math/plus-minus-110/math-plus-minus-110\";\nimport {WordSearchRoute} from \"../routes/literacy/word-search/word-search-route\";\n\nexport const routes = [\n    { name: \"Math: Match Plus\" , path: \"/math-match-plus\" , component: MatchPlus  },\n    { name: \"Math: Match Minus\", path: \"/math-match-minus\", component: MatchMinus  },\n\n    { name: \"Math: Minus\", path: \"/math-minus\",             component: MathMinus  },\n    { name: \"Math: Plus Minus 110\", path: \"/math-plus-minus-110\",             component: MathPlusMinus110  },\n\n    { name: \"Literacy: WordSearchRoute\", path: \"/word-search\",             component: WordSearchRoute  },\n];\n","import {cs} from \"../../../../../common/react/chain-services\";\nimport * as React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {routes} from \"../../app/routes\";\n\nexport const IndexRoute = () => cs(\n    ({}) => (\n        <div className=\"index-route\">\n            {routes.map(({name, path}, i) => (\n                <div className=\"\" key={i}>\n                    <Link to={path}>{name}</Link>\n                </div>\n            ))}\n        </div>\n    )\n);\n","import {cs} from \"../../../../common/react/chain-services\";\nimport {Route, Router, Switch} from \"react-router\";\nimport {redirect} from \"./common/redirect\";\nimport {routerHistory} from \"./common/router-history\";\nimport * as React from \"react\";\nimport {IndexRoute} from \"../routes/index/index-route\";\nimport {routes} from \"./routes\";\n\nexport const MaxApp = () => cs(\n    ({}) => {\n        const defaultRoute = \"/index\";\n        return (\n            <Router history={routerHistory}>\n                <Switch>\n                    {[{ path: \"/index\",              component: IndexRoute  }, ...routes].map(({path, component}, i) => (\n                        <Route\n                            key={i}\n                            exact\n                            path={path}\n                            component={component}\n                        />\n                    ))}\n\n                    <Route render={redirect(defaultRoute)}/>\n                </Switch>\n            </Router>\n        );\n    }\n)\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.scss';\nimport {MaxApp} from \"./app/max-app\";\n\nReactDOM.render(<MaxApp/>, document.getElementById('root'));\n\n\n\n","const {Component, createElement: h} = require(\"react\");\n\nconst UseState = ({next, getInitValue, initValue}) => h(UseState1, {next, getInitValue, initValue});\nexports.UseState = UseState;\nexports.UseState1 = UseState;\n\nclass UseState1 extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            value: props.getInitValue ? props.getInitValue() : props.initValue,\n        };\n    }\n    componentWillUnmount() {\n        this.unmounted = Date.now();\n    }\n\n    setState(state, callback) {\n        if (!this.unmounted || Date.now() - this.unmounted > 3000) {\n            super.setState(state, callback);\n            return;\n        }\n    }\n\n    render() {\n        const {next} = this.props;\n        const {value} = this.state;\n\n        return next({\n            value,\n            onChange: (value1, cb) => this.setState({value: value1}, cb),\n            change: (reduceValue, cb) => {\n                this.setState(\n                    (state) => ({\n                        ...state,\n                        value: reduceValue(state.value),\n                    }),\n                    cb\n                );\n            },\n        }) ?? null;\n    }\n}","const {cs} = require(\"./chain-services\");\nconst {UseState} = require(\"./use-state\");\n\nconst LsState = ({key, defaultValue, next}) => cs(\n    [\"state\", (_, next) => UseState({\n        getInitValue: () => {\n            const str = localStorage.getItem(key);\n            return str && JSON.parse(str);\n        },\n        next,\n    })],\n    ({state}) => next({\n        value: state.value ?? defaultValue,\n        onChange: (v) => {\n            state.onChange(v);\n            if (v == null) {\n                localStorage.removeItem(key);\n            } else {\n                localStorage.setItem(key, JSON.stringify(v));\n            }\n        },\n    }),\n);\nexports.LsState = LsState;\n","const {changePath} = require(\"../utils/arr-path\");\n\nconst spc = (state, path, change) => {\n    if (state.change) {\n        state.change((v) => changePath(v, path, change));\n    } else {\n        state.onChange(changePath(state.value, path, change));\n    }\n};\nexports.spc = spc;\n","\nconst genNumbers = (numberGenerators) => {\n    let ret = [];\n    for (let i = 0; i < numberGenerators.length; i++) {\n        const numberGenerator = numberGenerators[i];\n        const num = numberGenerator(ret);\n        // console.log(num)\n        ret.push(num);\n    }\n\n    return ret;\n};\nexports.genNumbers = genNumbers;\n\n","\nconst genInt = (from, to, until) => {\n    for (let i = 0; i < 1000; i++) {\n        const i1 = genInt1(from, to);\n        if (until == null || until(i1)) {\n            return i1;\n        }\n    }\n};\nexports.genInt = genInt;\n\nconst genInt1 = (from, to) => Math.floor(Math.random() * (to-from)) + from;\n","const {genNumbers} = require(\"./gen-numbers\");\n\nconst toMath1 = (deltas) => {\n    let s = deltas[0];\n\n    for (let i = 1; i < deltas.length; i++) {\n        const delta = deltas[i];\n        s += delta >= 0 ? \" + \" + delta : \" - \" + -delta;\n    }\n    return s;\n};\n\nconst toDeltas = (numbers) => {\n    let v = numbers[0];\n    let ret = [v];\n    for (let i = 1; i < numbers.length; i++) {\n        const number = numbers[i];\n        const delta = number - v;\n        v = number;\n\n        ret.push(delta);\n    }\n    return ret;\n};\nconst formatEquation = (numbers) => {\n    return toMath1(toDeltas(numbers));\n};\nexports.formatEquation = formatEquation;","const cs = (...services) => {\n    return gather(services.filter(v=>v), {});\n};\nexports.cs = cs;\nexports.cs1 = cs;\n\nconst gather = (services, prev) => {\n    if (services.length === 0) {\n        throw 43525;\n    }\n    const [first, ...last] = services;\n    const [name, fn] = Array.isArray(first) ? first : [null, first];\n\n    return fn(prev, (ret) => gather(last, name!=null ? {...prev, [name]: ret} : prev));\n};\n"],"sourceRoot":""}