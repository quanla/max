{"version":3,"sources":["../../../common/react/use-state.js","../../../common/react/load.js","../../../common/react/ls-state.js","../../../common/react/load2.js","../../../common/react/scope.js","../../../common/utils/arr-path.js","../../../common/react/invoke.js","../../../common/react/f-component.js","../../../common/utils/equal-deep.js","../../../common/utils/fs.js","math/math-1a.jsx","index.jsx","../../../common/utils/collections.js","../../../common/react/chain-services.js"],"names":["require","Component","h","createElement","UseState","next","getInitValue","initValue","UseState1","exports","props","context","state","value","this","unmounted","Date","now","callback","onChange","value1","cb","setState","change","reduceValue","Load2","cs","Load","fetch","_key","load2","Load1","LsState","key","defaultValue","_","str","localStorage","getItem","JSON","parse","v","removeItem","setItem","stringify","scope","Fragment","Invoke","keepOutdatedValue","loaded","loading","fn","async","isMounted","undefined","reload","getPath","setPath","changePath","path","s1","reduce","obj","attr1","indexOf","split","object","length","lastAttrs","attr","type","createChild","Array","isArray","clone","slice","Object","assign","getPath1","getPathRaw","setPathRaw","setPathO","oldValue","updatedValue","locate","cond","first","last","ret","find","item","keys","k","FComponent","onMounted","Invoke1","getLatestProps","mounted","onMount","setTimeout","React","addRemove","updater","onUnmounts","onChangeds","onMounts","onUnmount","onChanged","forEach","l","prevProps","newState","f","removeListener","equalDeep","o1","o2","equalDeep1","chain","fList","chain1","and","generate","max","feeds","nums","push","Math","floor","random","unique","sort","combis","combi","i1","randomFrom","i2","uniqueDeep","from","to","ReactDOM","render","config","result","className","join","map","i","document","getElementById","findMinE","col","getValue","quickStop","minVal","minEle","e","findMaxE","maxVal","maxEle","findMinECompare","compare","findLastIndex","findMinValue","gt","compares","le","v1","v2","lt","ge","findMaxValue","withoutAll","targets","filter","remove1Mutate","targetElem","splice","by","byFn","e1","e2","createArray","isNaN","fill","findMinIndex","minIndex","insertAt","element","removeAll","without","unique1","findIndex","indexAttr","keyAttr","valueAttr","hasOwnProperty","index","getKey","indexAttrMulti","list","sort1","sortMulti","byFns","b1","b2","reverse","createArray1","createArray2","addListToSet","set","addToSetMutate","addToListMap","listMap","concatToListMap","items","merge","j","mergeListMap","lms","lm","replace","withs","replaceFind","newE","replaceIndex","replaceFind_f","getNewE","upsert","changeFind","changeIndex","flatten1","arr","concat","findValue","replaceBy","byF","replace1","target","with1","trues","falses","flatten11","removeIndex","replaceIndex2","newEs","sum","t","toMap","indexToKey","sum1","switchAmong","getArr","a","divide","weights","extracted","weight","di","end","swap","newKey","oldKey","get","newValue","crossMap","cols","firstCol","lastCols","findDuplicateds","jsonUnique","s","joinArr","delimiter","compareCol","newCol","oriCol","added","removed","oe","ne","shuffle","array","currentIndex","temporaryValue","randomIndex","isEmpty","isNotEmpty","setEqual","col1","col2","x","isAllNull","arrStartsWith","startsWith","arrEquals","a1","a2","flip","services","gather","cs1","prev","name"],"mappings":"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","file":"static/js/main.1a554bc5.chunk.js","sourcesContent":["const {Component, createElement: h} = require(\"react\");\n\nconst UseState = ({next, getInitValue, initValue}) => h(UseState1, {next, getInitValue, initValue});\nexports.UseState = UseState;\nexports.UseState1 = UseState;\n\nclass UseState1 extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            value: props.getInitValue ? props.getInitValue() : props.initValue,\n        };\n    }\n    componentWillUnmount() {\n        this.unmounted = Date.now();\n    }\n\n    setState(state, callback) {\n        if (!this.unmounted || Date.now() - this.unmounted > 3000) {\n            super.setState(state, callback);\n            return;\n        }\n    }\n\n    render() {\n        const {next} = this.props;\n        const {value} = this.state;\n\n        return next({\n            value,\n            onChange: (value1, cb) => this.setState({value: value1}, cb),\n            change: (reduceValue, cb) => {\n                this.setState(\n                    (state) => ({\n                        ...state,\n                        value: reduceValue(state.value),\n                    }),\n                    cb\n                );\n            },\n        });\n    }\n}","const {Load2} = require(\"./load2\");\nconst {cs} = require(\"./chain-services\");\n\nconst Load = ({fetch, next, _key}) => cs(\n    [\"load2\", ({}, next) => Load2({\n        fetch, next, _key,\n    })],\n    ({load2}) => next && next(load2.value),\n);\nexports.Load = Load;\nexports.Load1 = Load;\n","const {cs} = require(\"./chain-services\");\nconst {UseState} = require(\"./use-state\");\n\nconst LsState = ({key, defaultValue, next}) => cs(\n    [\"state\", (_, next) => UseState({\n        getInitValue: () => {\n            const str = localStorage.getItem(key);\n            return str && JSON.parse(str);\n        },\n        next,\n    })],\n    ({state}) => next({\n        value: state.value ?? defaultValue,\n        onChange: (v) => {\n            state.onChange(v);\n            if (v == null) {\n                localStorage.removeItem(key);\n            } else {\n                localStorage.setItem(key, JSON.stringify(v));\n            }\n        },\n    }),\n);\nexports.LsState = LsState;\n","const {scope} = require(\"./scope\");\nconst {cs} = require(\"./chain-services\");\nconst {createElement: h, Fragment} = require(\"react\");\nconst {UseState} = require(\"./use-state\");\nconst {Invoke} = require(\"./invoke\");\n\nconst Load2 = ({fetch, next, keepOutdatedValue, _key}) => cs(\n    [\"loaded\", (_, next) => UseState({next})],\n    ({loaded}) => {\n        const loading = loaded.value == null || loaded.value.key !== _key;\n\n        return h(Fragment, {},\n            loading && (\n                h(Invoke, {\n                    key: _key,\n                    fn: async ({isMounted}) => {\n                        const value = await fetch();\n                        if (!isMounted()) {\n                            return;\n                        }\n                        loaded.onChange({value, key: _key});\n                    },\n                })\n            ),\n\n            next && next({\n                loading,\n                ...scope(loaded, [\"value\"]),\n                value: !loaded.value || _key !== loaded.value.key && !keepOutdatedValue ? undefined : loaded.value.value,\n                // value: loading && !keepOutdatedValue ? undefined : loaded.value.value,\n                reload: async () => {\n                    const value = await fetch();\n                    loaded.onChange({value, key: _key});\n                },\n            }),\n        );\n    },\n);\nexports.Load2 = Load2;\n","const {getPath, setPath, changePath} = require(\"../utils/arr-path\");\n\nconst scope = (state, path) => ({\n    value: getPath(state.value, path),\n    onChange: (v) => {\n        if (state.change) {\n            state.change((s1) => setPath(s1, path, v));\n        } else {\n            state.onChange(setPath(state.value, path, v));\n        }\n    },\n    change: (reduce, cb) => {\n        if (state.change) {\n            state.change(\n                (v) => changePath(v, path, reduce),\n                cb,\n            );\n        } else {\n            state.onChange(changePath(state.value, path, reduce), cb);\n        }\n    },\n});\nexports.scope = scope;\n","\nfunction getPath(obj, path) {\n    if (path == null) {\n        return obj;\n    }\n    for (const attr1 of path) {\n        if (obj == null) {\n            return obj;\n        }\n        const attr = typeof attr1 !== \"string\" ? attr1 : attr1.indexOf(\"!\") > 0 ? attr1.split(\"!\")[0] : attr1;\n        obj = obj[attr];\n    }\n    return obj;\n}\nexports.getPath = getPath;\nexports.getPath1 = getPath;\n\nfunction getPathRaw(obj, path) {\n    if (path == null) {\n        return obj;\n    }\n    for (const attr of path) {\n        obj = obj[attr];\n        if (obj == null) {\n            return obj;\n        }\n    }\n    return obj;\n}\nexports.getPathRaw = getPathRaw;\nexports.getPath1 = getPath;\n\nfunction setPath(object, path, value) {\n    if (path.length === 0) {\n        return value;\n    }\n\n    let [attr1, ...lastAttrs] = path;\n\n    const [attr, type] = typeof attr1 !== \"string\" ? [attr1] : attr1.indexOf(\"!\") > 0 ? attr1.split(\"!\") : [attr1];\n\n    const createChild = () => type === \"arr\" ? [] : {};\n    if (Array.isArray(object)) {\n        let clone = object ? object.slice(0) : [];\n        clone[attr] = setPath(object && object[attr] || createChild(), lastAttrs, value);\n        return clone;\n    } else {\n        return Object.assign({}, object, {[attr]: setPath(object && object[attr] || createChild(), lastAttrs, value)});\n    }\n\n}\nexports.setPath = setPath;\n\nfunction setPathRaw(object, path, value) {\n    if (path.length === 0) {\n        return value;\n    }\n\n    const [attr, ...lastAttrs] = path;\n\n    const createChild = () => ({});\n    return Object.assign({}, object, {[attr]: setPathRaw(object && object[attr] || createChild(), lastAttrs, value)});\n}\nexports.setPathRaw = setPathRaw;\n\nfunction setPathO(object, path, value) {\n    if (path.length === 0) {\n        return value;\n    }\n\n    let [attr, ...lastAttrs] = path;\n\n    return Object.assign({}, object, {[attr]: setPathO(object && object[attr] || {}, lastAttrs, value)});\n}\nexports.setPathO = setPathO;\n\nfunction changePath(object, path, fn) {\n    let oldValue = getPath(object, path);\n    let updatedValue = fn(oldValue);\n    return updatedValue !== oldValue ? setPath(object, path, updatedValue) : object;\n}\nexports.changePath = changePath;\n\n\nconst locate = (obj, path) => {\n    if (obj == null) {\n        return null;\n    }\n    const [first, ...last] = path;\n\n    const ret = ((cond) => {\n        if (typeof cond === \"object\") {\n            return obj.find((item) => !Object.keys(cond).find((k) => cond[k] !== item[k]));\n        } else {\n            return obj[cond];\n        }\n    })(first);\n\n    if (last.length) {\n        return locate(ret, last);\n    } else {\n        return ret;\n    }\n};\nexports.locate = locate;","const {FComponent} = require(\"./f-component\");\nconst {createElement: h} = require(\"react\");\n\nconst Invoke = ({fn, props, onMounted, next}) => h(Invoke1, {fn, props, onMounted, next});\nexports.Invoke = Invoke;\n\nclass Invoke1 extends FComponent {\n    constructor(props, context) {\n        super(props, context);\n\n        props.fn && props.fn({\n            getLatestProps: () => this.props.props,\n            isMounted: () => this.mounted,\n        });\n\n        if (props.onMounted) {\n            this.onMount(() => {\n                setTimeout(() => {\n                    this.props.onMounted({\n                        getLatestProps: () => this.props.props,\n                        isMounted: () => this.mounted,\n                    });\n                }, 0);\n            });\n        }\n    }\n\n    render() {\n        const {next} = this.props;\n        return next ? next() : null;\n    }\n}","const React = require(\"react\");\nconst {addRemove} = require(\"../utils/collections\");\n\nclass FComponent extends React.Component {\n\n    constructor(props, context, updater) {\n        super(props, context, updater);\n\n        this.onUnmounts = [];\n        this.onChangeds = [];\n        this.onMounts = [];\n        this.mounted = false;\n\n        this.onMount = addRemove(this.onMounts);\n        this.onUnmount = addRemove(this.onUnmounts);\n        this.onChanged = addRemove(this.onChangeds);\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.onMounts.forEach((l)=> l());\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        this.onUnmounts.forEach((l)=> l());\n    }\n\n    componentDidUpdate(prevProps) {\n        this.onChangeds.forEach((l)=> l(prevProps));\n    }\n\n    setState(newState, cb) {\n        if (this.mounted) {\n            super.setState(newState, cb);\n        } else {\n            this.state = Object.assign(this.state, newState);\n            cb && cb();\n        }\n    }\n\n    forceUpdate() {\n        if (this.mounted) {\n            super.forceUpdate();\n        }\n    }\n\n    onChanged1(f) {\n        const done = f();\n        if (done) {\n            return;\n        }\n\n        const removeListener = this.onChanged(() => {\n            const done = f();\n            if (done) {\n                removeListener();\n            }\n        });\n    };\n}\nexports.FComponent = FComponent;\n","\nfunction equalDeep(o1, o2) {\n    if (o1 === o2) {\n        return true;\n    }\n\n    if (o1 == null && o2 == null) {\n        return false;\n    }\n\n    if (o1 == null || o2 == null) {\n        return false;\n    }\n\n    if (typeof o1 === \"object\" && typeof o2 === \"object\") {\n        for (const k in o1) {\n            if (!equalDeep(o1[k], o2[k])) {\n                return false;\n            }\n        }\n        for (const k in o2) {\n            if (o1[k] === undefined && o2[k] !== undefined) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    return false;\n}\nexports.equalDeep = equalDeep;\nexports.equalDeep1 = equalDeep;\n","const chain = (value, ...fList) => {\n    for (const fn of fList) {\n        if (fn) {\n            value = fn(value);\n        }\n    }\n    return value;\n};\n\nexports.chain = chain;\nexports.chain1 = chain;\n\nconst and = (...fList) => {\n    return (...args) => {\n        for (const fn of fList) {\n            if (!fn(...args)) {\n                return false;\n            }\n        }\n        return true;\n    };\n};\n\nexports.and = and;","import {Load} from \"../../../../common/react/load\";\nimport {unique, sort, uniqueDeep} from \"../../../../common/utils/collections\";\nimport {cs} from \"../../../../common/react/chain-services\";\nimport * as React from \"react\";\nimport {LsState} from \"../../../../common/react/ls-state\";\nimport \"./math-1a.scss\";\n\nexport const Math1a = ({}) => cs(\n    [\"config\", (_, next) => LsState({\n        key: \"math-1a.config\",\n        defaultValue: {\n            max: 50,\n        },\n        next,\n    })],\n    [\"result\", ({config}, next) => Load({\n        _key: JSON.stringify(config.value),\n        fetch: () => generate(config.value),\n        next,\n    })],\n    ({result}) => result && (\n        <div className=\"math-1a-5di\">\n            <div className=\"\">\n                {result.feeds.join(\", \")}\n            </div>\n            <div className=\"\">\n                {result.combis.map(({i1, i2}, i) => (\n                    <div key={i}>\n                        {result.feeds[i1] + result.feeds[i2]} = {result.feeds[i1]} + {result.feeds[i2]}\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n);\n\nconst generate = ({max}) => {\n    const feeds = (() => {\n        let nums = [];\n        for (;nums.length < 10;) {\n            nums.push(Math.floor(Math.random() * 30) + 1);\n            nums = unique(nums);\n        }\n        return sort(nums);\n    })();\n\n    const combis = (() => {\n        let combis = [];\n\n        for (;combis.length < 10;) {\n            const combi = (() => {\n                const i1 = randomFrom(0, feeds.length - 1);\n                const i2 = randomFrom(i1 + 1, feeds.length);\n                return {i1, i2};\n            })();\n            if (feeds[combi.i1] + feeds[combi.i2] <= max) {\n                combis.push(combi);\n                combis = uniqueDeep(combis);\n            }\n        }\n        return sort(combis, ({i1, i2}) => i1 + i2);\n    })();\n\n    // console.log(feeds)\n    return {feeds, combis};\n};\n\nconst randomFrom = (from, to) => {\n    return Math.floor(Math.random() * (to - from)) + from;\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.scss';\nimport {Math1a} from \"./math/math-1a\";\n\nReactDOM.render(<Math1a/>, document.getElementById('root'));\n\n\n\n","const {equalDeep1} = require(\"./equal-deep\");\nconst {chain} = require(\"./fs\");\n\nconst findMinE = (col, getValue, quickStop) => {\n    let minVal = undefined;\n    let minEle = undefined;\n\n    for (const e of col) {\n        const value = getValue(e);\n        if (value == null) {\n            continue;\n        }\n\n        if (quickStop !== undefined && quickStop===value) {\n            return e;\n        }\n        if (minVal === undefined || minVal > value) {\n            const v = value;\n            if (v != null) {\n                minVal = v;\n                minEle = e;\n            }\n        }\n    }\n    return minEle;\n};\n\nexports.findMinE = findMinE;\n\nconst findMaxE = (col, getValue = v=>v, quickStop) => {\n    let maxVal = undefined;\n    let maxEle = undefined;\n\n    for (const e of col) {\n        const value = getValue(e);\n        if (quickStop !== undefined && quickStop===value) {\n            return e;\n        }\n\n        if (maxVal === undefined || maxVal < value) {\n            const v = value;\n            if (v != null) {\n                maxVal = v;\n                maxEle = e;\n            }\n        }\n    }\n    return maxEle;\n};\nexports.findMaxE = findMaxE;\n\nconst findMinECompare = (col, compare) => {\n    let maxEle = undefined;\n\n    for (const e of col) {\n        if (maxEle === undefined || compare(maxEle, e) > 0) {\n            maxEle = e;\n        }\n    }\n    return maxEle;\n};\nexports.findMinECompare = findMinECompare;\n\nconst last = (col) => {\n    return col[col.length - 1];\n};\nexports.last = last;\n\nconst findLastIndex = (col, find) => {\n    for (let i = col.length - 1; i > -1; i--) {\n        if (find(col[i])) {\n            return i;\n        }\n    }\n    return -1;\n};\nexports.findLastIndex = findLastIndex;\n\nconst findMinValue = (col, getValue = v=>v, {gt = compares.gt}={}) => {\n    if (col==null) {\n        return null;\n    }\n\n    let minVal = undefined;\n\n    for (const e of col) {\n        if (e == null) {\n            continue;\n        }\n        const v = getValue(e);\n        if (minVal === undefined || gt(minVal, v)) {\n            if (v != null) {\n                minVal = v;\n            }\n        }\n    }\n    return minVal === undefined ? null : minVal;\n};\n\nexports.findMinValue = findMinValue;\n\nconst compares = {\n    le: (v1, v2) => v1 <= v2,\n    lt: (v1, v2) => v1 <  v2,\n    ge: (v1, v2) => v1 >= v2,\n    gt: (v1, v2) => v1 >  v2,\n};\n\nconst findMaxValue = (col, getValue = (v=>v), {lt = compares.lt}={}) => {\n    if (col==null) {\n        return null;\n    }\n    let maxVal = undefined;\n\n    for (const e of col) {\n        if (e == null) {\n            continue;\n        }\n        const value = getValue(e);\n        if (maxVal === undefined || lt(maxVal, value)) {\n            if (value != null) {\n                maxVal = value;\n            }\n        }\n    }\n    return maxVal === undefined ? null : maxVal;\n};\n\nexports.findMaxValue = findMaxValue;\n\nconst findMinIndex = (col, getValue) => {\n    let minVal = undefined;\n    let minIndex = undefined;\n\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n\n        if (minVal === undefined || minVal > getValue(e)) {\n            const v = getValue(e);\n            if (v != null) {\n                minVal = v;\n                minIndex = i;\n            }\n        }\n    }\n    return minIndex;\n};\nexports.findMinIndex = findMinIndex;\n\n\nfunction insertAt(col, e, i) {\n    return [\n        ...col.slice(0, i),\n        e,\n        ...col.slice(i),\n    ];\n}\nexports.insertAt = insertAt;\n\nfunction addRemove(col) {\n    return (element) => {\n        col.push(element);\n\n        return () => remove1Mutate(col, element);\n    }\n}\nexports.addRemove = addRemove;\n\nfunction withoutAll(col, targets) {\n    return col.filter((e) => !~targets.indexOf(e));\n}\nexports.withoutAll = withoutAll;\n\n// @deprecated\nexports.removeAll = withoutAll;\n\nfunction remove1Mutate(col, targetElem) {\n    if (col == null) {\n        return;\n    }\n\n    let i = col.indexOf(targetElem);\n    if (i === -1) {\n        return;\n    }\n    col.splice(i, 1);\n}\nexports.remove1Mutate = remove1Mutate;\n\nfunction without(targetElem, col) {\n    if (col == null) {\n        return;\n    }\n    return col.filter((e) => e!==targetElem);\n}\nexports.without = without;\n\nfunction unique(col, by = v=>v) {\n    if (!col) {\n        return col;\n    }\n    const ret = [];\n    const keys = [];\n    for (const e of col) {\n        const key = by(e);\n        if (!~keys.indexOf(key)) {\n            ret.push(e);\n            keys.push(key);\n        }\n    }\n    return ret;\n}\nexports.unique = unique;\nexports.unique1 = unique;\n\nfunction uniqueDeep(col, by = v=>v) {\n    if (!col) {\n        return col;\n    }\n    const ret = [];\n    const keys = [];\n    for (const e of col) {\n        const key = by(e);\n        if (!~keys.findIndex((k) => equalDeep1(k, key))) {\n            ret.push(e);\n            keys.push(key);\n        }\n    }\n    return ret;\n}\nexports.uniqueDeep = uniqueDeep;\n\nfunction indexAttr(col, keyAttr, valueAttr) {\n    if (col == null) {\n        return {};\n    }\n    let map = {};\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n        if (map.hasOwnProperty(e[keyAttr])) {\n            throw `Property existed [${e[keyAttr]}]`;\n        }\n        map[e[keyAttr]] = valueAttr ? e[valueAttr] : e;\n    }\n    return map;\n}\nexports.indexAttr = indexAttr;\n\nfunction index(col, getKey, getValue) {\n    if (col == null) {\n        return {};\n    }\n    let map = {};\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n        if (map.hasOwnProperty(getKey(e))) {\n            throw `Property existed [${getKey(e)}]`;\n        }\n        map[getKey(e)] = getValue ? getValue(e) : e;\n    }\n    return map;\n}\nexports.index = index;\n\nfunction indexAttrMulti(col, keyAttr, valueAttr) {\n    if (col == null) {\n        return {};\n    }\n    let map = {};\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n        let list = map[e[keyAttr]];\n        if (list == null) {\n            list = [];\n            map[e[keyAttr]] = list;\n        }\n        list.push(valueAttr ? e[valueAttr] : e);\n    }\n    return map;\n}\nexports.indexAttrMulti = indexAttrMulti;\n\nfunction sort(col, byFn = v=>v, compare = (v1,v2) => v1 > v2 ? 1 : -1) {\n    if (col == null) {\n        return null;\n    }\n    let clone = col.slice(0);\n    clone.sort((e1, e2) => {\n        const v1 = byFn(e1);\n        const v2 = byFn(e2);\n        if (v1 === v2) {\n            return 0;\n        }\n        if (v1 == null) {\n            return -1;\n        }\n        if (v2 == null) {\n            return 1;\n        }\n        return compare(v1, v2);\n    });\n    return clone;\n}\nexports.sort = sort;\nexports.sort1 = sort;\n\nfunction sortMulti(col, byFns) {\n    if (col == null) {\n        return null;\n    }\n    let clone = col.slice(0);\n    clone.sort((e1, e2) => {\n        for (const byFn of byFns) {\n            const b1 = byFn(e1);\n            const b2 = byFn(e2);\n            if (b1 > b2) {\n                return 1;\n            }\n            if (b1 < b2) {\n                return -1;\n            }\n        }\n        return 0;\n    });\n    return clone;\n}\nexports.sortMulti = sortMulti;\n\nfunction reverse(col) {\n    if (col == null) return null;\n\n    let clone = col.slice(0);\n    clone.reverse();\n    return clone;\n}\nexports.reverse = reverse;\n\nfunction createArray(length) {\n    if (isNaN(length)) {\n        throw \"[createArray] Length is not a number: \" + length;\n    }\n    return new Array(length).fill(0).map((_, i) => i);\n}\nexports.createArray = createArray;\nexports.createArray1 = createArray;\n\nfunction createArray2(from, to) {\n    let ret = [];\n    for (let i = from; i < to; i++) {\n        ret.push(i);\n    }\n    return ret;\n}\nexports.createArray2 = createArray2;\n\nfunction addListToSet(list, set) {\n    set = set.slice(0);\n    for (const item of list) {\n        if (!~set.indexOf(item)) {\n            set.push(item);\n        }\n    }\n    return set;\n}\nexports.addListToSet = addListToSet;\n\nfunction addToSetMutate(e, set) {\n    if (!~set.indexOf(e)) {\n        set.push(e);\n    }\n    return set;\n}\nexports.addToSetMutate = addToSetMutate;\n\nfunction addToListMap(listMap, key, item) {\n    let list = listMap[key];\n    if (list == null) {\n        list = [];\n        listMap[key] = list;\n    }\n    list.push(item);\n}\nexports.addToListMap = addToListMap;\n\nfunction concatToListMap(listMap, key, items) {\n    listMap[key] = [...listMap[key]||[], ...items];\n}\nexports.concatToListMap = concatToListMap;\n\nconst merge = (col, getKey, merge) => {\n    col = col.slice(0);\n\n    let ret = [];\n    for (let i = 0; i < col.length; i++) {\n        let e = col[i];\n        const key = getKey(e);\n\n        for (let j = i+1; j < col.length; j++) {\n            const e2 = col[j];\n            if (getKey(e2) === key) {\n                e = merge(e, e2);\n                col.splice(j, 1);\n                j--;\n            }\n        }\n        ret.push(e);\n    }\n    return ret;\n};\nexports.merge = merge;\n\nfunction mergeListMap(...lms) {\n    const ret = {};\n    for (const lm of lms) {\n        for (const key in lm) {\n            if (!ret.hasOwnProperty(key)) {\n                ret[key] = lm[key];\n            } else {\n                ret[key] = [...ret[key], ...lm[key]];\n            }\n        }\n    }\n    return ret;\n}\nexports.mergeListMap = mergeListMap;\n\nfunction replace(col, targets, withs) {\n    return col.map((e) => {\n        const indexOf = targets.indexOf(e);\n        if (indexOf > -1) {\n            return withs[indexOf];\n        } else {\n            return e;\n        }\n    });\n}\nexports.replace = replace;\n\nfunction replaceFind(col, newE, find) {\n    if (col == null) {\n        return null;\n    }\n    const index = col.findIndex(find);\n    if (index === -1) {\n        return col;\n    }\n    return replaceIndex(index, col, newE);\n}\nexports.replaceFind = replaceFind;\n\nfunction replaceFind_f(col, getNewE, find) {\n    if (col == null) {\n        return null;\n    }\n    const index = col.findIndex(find);\n    if (index === -1) {\n        return col;\n    }\n    return replaceIndex(index, col, getNewE(col[index]));\n}\nexports.replaceFind_f = replaceFind_f;\n\nconst upsert = (col, find, newE) => {\n    const index = col.findIndex(find);\n    if (index === -1) {\n        return [...col, newE];\n    } else {\n        return [...col.slice(0, index), newE, ...col.slice(index + 1)];\n    }\n};\nexports.upsert = upsert;\n\n\nfunction changeFind(col, find, by) {\n    if (col == null) {\n        return null;\n    }\n    const index = col.findIndex(find);\n    if (index === -1) {\n        return col;\n    }\n    return changeIndex(index, col, by);\n}\nexports.changeFind = changeFind;\n\nconst findValue = (col, getValue) => {\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n\n        const value = getValue(e, i);\n        if (value != null) {\n            return value;\n        }\n    }\n    return null;\n};\nexports.findValue = findValue;\n\n\nfunction replaceBy(col, find, byF) {\n    if (col == null) {\n        return null;\n    }\n    return col.map((e) => find(e) ? byF(e) : e);\n}\nexports.replaceBy = replaceBy;\n\nfunction replace1(col, target, with1) {\n    return col.map((e) => e === target ? with1 : e);\n}\nexports.replace1 = replace1;\n\nfunction split(col, by) {\n    if (col == null) {\n        return [];\n    }\n    let trues = [];\n    let falses = [];\n    for (const e of col) {\n        (by(e) ? trues : falses).push(e);\n    }\n    return [trues, falses];\n}\nexports.split = split;\n\nfunction flatten1(col) {\n    if (col == null) {\n        return [];\n    }\n    let ret = [];\n    for (const arr of col) {\n        if (arr) {\n            ret = ret.concat(arr);\n        }\n    }\n    return ret;\n}\nexports.flatten1 = flatten1;\nexports.flatten11 = flatten1;\n\nconst removeIndex = (index, col) => {\n    return col.filter((e, i) => i !== index);\n};\nexports.removeIndex = removeIndex;\n\nconst replaceIndex = (index, col, newE) => {\n    return col.map((e, i) => i !== index ? e : newE);\n};\nexports.replaceIndex = replaceIndex;\n\n// const replaceLast = (index, col, newE) => {\n//     return col.map((e, i) => i !== index ? e : newE);\n// };\n// exports.replaceLast = replaceLast;\n\nconst replaceIndex2 = (index, col, newEs) => {\n    return [\n        ...col.slice(0, index),\n        ...newEs,\n        ...col.slice(index+1),\n    ];\n};\nexports.replaceIndex2 = replaceIndex2;\n\nconst changeIndex = (index, col, by) => {\n    return col.map((e, i) => i !== index ? e : by(e));\n};\nexports.changeIndex = changeIndex;\n\nfunction toMap(arr, indexToKey) {\n    const ret = {};\n    for (let i = 0; i < arr.length; i++) {\n        ret[indexToKey(i)] = arr[i];\n    }\n    return ret;\n}\nexports.toMap = toMap;\n\nfunction sum(arr, getValue = v=>v) {\n    if (arr==null) {\n        return 0;\n    }\n    return arr.reduce((t, e, i) => t+(getValue(e, i)||0), 0);\n}\nexports.sum = sum;\nexports.sum1 = sum;\n\nconst switchAmong = (arr) => {\n    const getArr = typeof arr === \"function\" ? arr : () => arr;\n\n    let index = 0;\n\n    return () => {\n        index++;\n        const a = getArr();\n        if (index >= a.length) {\n            index = 0;\n        }\n        return a[index];\n    };\n};\n\nexports.switchAmong = switchAmong;\n\n\nconst divide = (col, weights) => {\n\n    let ret = [];\n    let extracted = 0;\n    weights.forEach((weight, di) => {\n        const end = di === weights.length - 1 ? col.length :\n            extracted + Math.floor(weight*col.length)\n        ;\n        ret.push(col.slice(extracted, end));\n        extracted = end;\n    });\n\n    return ret;\n};\nexports.divide = divide;\n\n\nconst swap = ({get, set}, newKey, oldKey) => {\n    const oldValue = get(oldKey);\n    const newValue = get(newKey);\n\n    set(oldValue, newKey);\n    set(newValue, oldKey);\n};\nexports.swap = swap;\n\n\nconst crossMap = (cols, fn) => {\n    if (cols == null || cols.length === 0) {\n        return [];\n    }\n    if (cols.length === 1) {\n        return cols[0].map((e) => fn([e]));\n    }\n    const [firstCol, ...lastCols] = cols;\n\n    let ret = [];\n    for (const e of firstCol) {\n        ret = [...ret, ...crossMap(lastCols, (path) => fn([e, ...path]))];\n    }\n    return ret;\n};\n\nexports.crossMap = crossMap;\n\nconst findDuplicateds = (col) => {\n    const ret = [];\n    for (let i = 0; i < col.length; i++) {\n        const e = col[i];\n        if (ret.indexOf(e) > -1) {\n            continue;\n        }\n        for (let j = i+1; j < col.length; j++) {\n            const e2 = col[j];\n            if (e2 === e) {\n                ret.push(e);\n                break;\n            }\n        }\n    }\n    return ret;\n};\nexports.findDuplicateds = findDuplicateds;\n\n\nconst jsonUnique = (col) => chain(\n    col.map((e) => JSON.stringify(e)),\n    unique,\n    (col) => col.map((s) => JSON.parse(s)),\n);\nexports.jsonUnique = jsonUnique;\n\nconst joinArr = (arr, delimiter) => {\n    if (arr== null || arr.length < 2) {\n        return arr;\n    }\n    let ret = [];\n    for (let i = 0; i < arr.length; i++) {\n        const e = arr[i];\n        if (i > 0) {\n            ret.push(delimiter);\n        }\n        ret.push(e);\n    }\n    return ret;\n};\nexports.joinArr = joinArr;\n\nconst compareCol = (newCol, oriCol, compare = (v1,v2) => v1===v2) => {\n    if (oriCol == null) {\n        oriCol = [];\n    }\n    if (newCol == null) {\n        newCol = [];\n    }\n\n    let added   = [];\n    let removed = [];\n    for (const oe of oriCol) {\n        if (newCol.find((ne) => compare(ne, oe)) == null) {\n            removed.push(oe);\n        }\n    }\n    for (const ne of newCol) {\n        if (oriCol.find((oe) => compare(ne, oe)) == null) {\n            added.push(ne);\n        }\n    }\n\n    return {added, removed};\n};\n\nexports.compareCol = compareCol;\n\n\nconst shuffle = array => {\n    array = array.slice(0);\n\n    let currentIndex = array.length;\n\n    const swap = (i1, i2) => {\n        const temporaryValue = array[i1];\n        array[i1] = array[i2];\n        array[i2] = temporaryValue;\n    };\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        const randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex --;\n\n        swap(currentIndex, randomIndex);\n    }\n\n    return array;\n};\nexports.shuffle = shuffle;\n\nconst isEmpty = (col) => {\n    return col == null || col.length === 0;\n};\nexports.isEmpty = isEmpty;\n\nconst isNotEmpty = (col) => {\n    return !isEmpty(col);\n};\nexports.isNotEmpty = isNotEmpty;\n\nconst setEqual = (col1, col2) => {\n    if (col1.length !== col2.length) {\n        return false;\n    }\n\n    for (const x of col1) {\n        if (col2.indexOf(x) === -1) {\n            return false;\n        }\n    }\n\n    return true;\n};\nexports.setEqual = setEqual;\n\nconst isAllNull = (col) => {\n    if (col === null) {\n        return null;\n    }\n\n    for (const v of col) {\n        if (v !== null) {\n            return false;\n        }\n    }\n\n    return true;\n};\nexports.isAllNull = isAllNull;\n\n\nconst arrStartsWith = (startsWith, arr) => {\n    if (arr == null) {\n        return startsWith == null;\n    }\n    if (startsWith == null) {\n        return true;\n    }\n    if (startsWith.length > arr.length) {\n        return true;\n    }\n\n    return arrEquals(arr.slice(0, startsWith.length), startsWith);\n};\nexports.arrStartsWith = arrStartsWith;\n\nconst arrEquals = (a1, a2) => {\n\n    if (a1 == null) {\n        return a2 == null;\n    }\n    if (a2 == null) {\n        return false;\n    }\n    if (a1.length !== a2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < a1.length; i++) {\n        if (a1[i] !== a2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n};\nexports.arrEquals = arrEquals;\n\nfunction flip(i1, i2, col) {\n    return col.map((e, i) => i === i1 ? col[i2] : i === i2 ? col[i1] : e);\n}\nexports.flip = flip;\n","const cs = (...services) => {\n    return gather(services.filter(v=>v), {});\n};\nexports.cs = cs;\nexports.cs1 = cs;\n\nconst gather = (services, prev) => {\n    if (services.length === 0) {\n        throw 43525;\n    }\n    const [first, ...last] = services;\n    const [name, fn] = Array.isArray(first) ? first : [null, first];\n\n    return fn(prev, (ret) => gather(last, name!=null ? {...prev, [name]: ret} : prev));\n};\n"],"sourceRoot":""}